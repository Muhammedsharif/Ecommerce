<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management - 1NOTONE Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #f8f9fa;
            min-height: 100vh;
        }

        /* Admin Layout Structure */
        
    

        /* Main Content Area */
        .main-contents {
            flex: 1;
            
            min-height: 100vh;
            background: #f8f9fa;
        }

        /* Top Header */
      

        /* Content Container */
        .content-container {
            padding: 30px;
            max-width: none;
            width: 100%;
        }

        /* Breadcrumb */
        .breadcrumb-container {
            background: white;
            border-radius: 8px;
            padding: 12px 20px;
            margin-bottom: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .breadcrumb {
            display: flex;
            align-items: center;
            margin: 0;
            padding: 0;
            list-style: none;
            font-size: 14px;
        }

        .breadcrumb-item {
            display: flex;
            align-items: center;
        }

        .breadcrumb-item a {
            color: #3b82f6;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .breadcrumb-item a:hover {
            text-decoration: underline;
        }

        .breadcrumb-item.active {
            color: #6b7280;
        }

        .breadcrumb-separator {
            margin: 0 8px;
            color: #6b7280;
        }

        /* Main Card */
        .main-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 100%;
        }

        .card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 25px 30px;
            color: white;
        }

        .card-header h2 {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0 0 8px 0;
        }

        .card-header p {
            margin: 0;
            opacity: 0.9;
        }

        .card-body {
            padding: 30px;
        }

        /* Statistics Cards */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            padding: 20px;
            display: flex;
            align-items: center;
            gap: 15px;
            transition: all 0.3s ease;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: white;
        }

        .stat-icon.total { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
        .stat-icon.pending { background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); }
        .stat-icon.processing { background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); }
        .stat-icon.delivered { background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); }
        .stat-icon.revenue { background: linear-gradient(135deg, #fa709a 0%, #fee140 100%); }

        .stat-content h3 {
            font-size: 1.8rem;
            font-weight: 700;
            margin: 0 0 5px 0;
            color: #1f2937;
        }

        .stat-content p {
            font-size: 0.9rem;
            color: #6b7280;
            margin: 0;
            font-weight: 500;
        }

        /* Search and Filter Section */
        .search-filter-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            gap: 20px;
            flex-wrap: wrap;
        }

        .search-container {
            position: relative;
            flex: 1;
            max-width: 400px;
        }

        .search-input {
            width: 100%;
            padding: 12px 16px 12px 45px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.2s ease;
            background: white;
        }

        .search-input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .search-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #9ca3af;
            font-size: 14px;
        }

        .filter-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .status-filter {
            padding: 12px 16px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 14px;
            background: white;
            cursor: pointer;
            transition: all 0.2s ease;
            min-width: 150px;
        }

        .status-filter:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .notification-btn {
            background: #f3f4f6;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            padding: 12px 15px;
            color: #6b7280;
            cursor: pointer;
            transition: all 0.2s ease;
            position: relative;
        }

        .notification-btn:hover {
            background: #e5e7eb;
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background: #ef4444;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
        }

        /* Table Styles */
        .table-container {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            border: 1px solid #e5e7eb;
            width: 100%;
        }

        .orders-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 14px;
        }

        .orders-table thead {
            background: #f9fafb;
        }

        .orders-table th {
            padding: 12px 16px;
            text-align: left;
            font-weight: 600;
            color: #374151;
            border-bottom: 1px solid #e5e7eb;
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .orders-table td {
            padding: 16px;
            border-bottom: 1px solid #f3f4f6;
            vertical-align: middle;
        }

        .orders-table tbody tr {
            transition: all 0.2s ease;
        }

        .orders-table tbody tr:hover {
            background: #f9fafb;
        }

        .orders-table tbody tr.hidden {
            display: none;
        }

        /* Customer Info Styles */
        .customer-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .customer-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #3b82f6;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 16px;
        }

        .customer-details h4 {
            font-size: 14px;
            font-weight: 600;
            color: #1f2937;
            margin: 0 0 2px 0;
        }

        .customer-details p {
            font-size: 12px;
            color: #6b7280;
            margin: 0;
        }

        /* Order ID Styles */
        .order-id {
            font-weight: 600;
            color: #1f2937;
            font-size: 14px;
        }

        /* Date Styles */
        .order-date {
            color: #6b7280;
            font-size: 13px;
        }

        /* Items Styles */
        .order-items {
            color: #1f2937;
        }

        .items-count {
            font-weight: 600;
            font-size: 14px;
        }

        .items-qty {
            color: #6b7280;
            font-size: 12px;
        }

        /* Amount Styles */
        .order-amount {
            font-weight: 700;
            color: #059669;
            font-size: 14px;
        }

        /* Payment Styles */
        .payment-method {
            color: #6b7280;
            font-size: 13px;
        }

        /* Status Styles */
        .status-badge {
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-pending {
            background: #fef3c7;
            color: #92400e;
        }

        .status-returned {
            background: #fecaca;
            color: #991b1b;
        }

        .status-delivered {
            background: #d1fae5;
            color: #065f46;
        }

        .status-processing {
            background: #dbeafe;
            color: #1e40af;
        }

        .status-cancelled {
            background: #f3f4f6;
            color: #374151;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .action-btn {
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            border: none;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .view-btn {
            background: #1f2937;
            color: white;
        }

        .view-btn:hover {
            background: #111827;
        }

        .status-btn {
            background: #6b7280;
            color: white;
        }

        .status-btn:hover {
            background: #4b5563;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #6b7280;
            display: none;
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 16px;
            color: #d1d5db;
        }

        .empty-state h3 {
            font-size: 1.1rem;
            margin-bottom: 8px;
            color: #374151;
        }

        /* Pagination Styles */
        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
            border-top: 1px solid #e5e7eb;
            margin-top: 20px;
        }

        .pagination-info {
            color: #6b7280;
            font-size: 14px;
        }

        .pagination-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .pagination-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            background: white;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            color: #374151;
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .pagination-btn:hover {
            background: #f9fafb;
            border-color: #9ca3af;
            color: #111827;
        }

        .pagination-numbers {
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .pagination-number {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            color: #374151;
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .pagination-number:hover {
            background: #f9fafb;
            border-color: #9ca3af;
            color: #111827;
        }

        .pagination-number.active {
            background: #3b82f6;
            border-color: #3b82f6;
            color: white;
        }

        .pagination-number.active:hover {
            background: #2563eb;
            border-color: #2563eb;
        }

        .pagination-dots {
            padding: 0 8px;
            color: #9ca3af;
            font-weight: 500;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .admin-sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .admin-sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .menu-toggle {
                display: block;
            }

            .content-container {
                padding: 20px;
            }
        }

        @media (max-width: 768px) {
            .search-filter-section {
                flex-direction: column;
                align-items: stretch;
            }

            .search-container {
                max-width: none;
            }

            .filter-section {
                justify-content: space-between;
            }

            .table-container {
                overflow-x: auto;
            }

            .orders-table {
                min-width: 800px;
            }

            .customer-info {
                min-width: 180px;
            }

            .action-buttons {
                flex-direction: column;
                min-width: 70px;
            }

            .pagination-container {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }

            .pagination-controls {
                justify-content: center;
                flex-wrap: wrap;
            }

            .pagination-numbers {
                order: 2;
                flex-wrap: wrap;
                justify-content: center;
            }

            .pagination-btn {
                order: 1;
                font-size: 13px;
                padding: 6px 12px;
            }
        }
    </style>
</head>
<body>
    

        <!-- Admin Sidebar -->
        <%- include("../partials/admin/header") %>

        <!-- Main Content -->
        <main class="main-contents">
             

            <!-- Content Container -->
            <div class="content-container">
                <!-- Breadcrumb Navigation -->
                <div class="breadcrumb-container">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="/admin/dashboard">
                                    <i class="fas fa-home"></i> Dashboard
                                </a>
                            </li>
                            <li class="breadcrumb-separator">/</li>
                            <li class="breadcrumb-item active">
                                Order Management
                            </li>
                        </ol>
                    </nav>
                </div>

                <!-- Main Card -->
                <div class="main-card">
                    <div class="card-header">
                        <h2>Order Management</h2>
                        <p>View, manage, and track all customer orders in one place</p>
                    </div>
                    <div class="card-body">
                        <!-- Order Statistics Cards -->
                        <div class="stats-container">
                            <div class="stat-card">
                                <div class="stat-icon total">
                                    <i class="fas fa-shopping-cart"></i>
                                </div>
                                <div class="stat-content">
                                    <h3><%= stats.total %></h3>
                                    <p>Total Orders</p>
                                </div>
                            </div>

                            <div class="stat-card">
                                <div class="stat-icon pending">
                                    <i class="fas fa-clock"></i>
                                </div>
                                <div class="stat-content">
                                    <h3><%= stats.pending %></h3>
                                    <p>Pending</p>
                                </div>
                            </div>

                            <div class="stat-card">
                                <div class="stat-icon processing">
                                    <i class="fas fa-cog"></i>
                                </div>
                                <div class="stat-content">
                                    <h3><%= stats.processing %></h3>
                                    <p>Processing</p>
                                </div>
                            </div>

                            <div class="stat-card">
                                <div class="stat-icon delivered">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <div class="stat-content">
                                    <h3><%= stats.delivered %></h3>
                                    <p>Delivered</p>
                                </div>
                            </div>

                            <div class="stat-card">
                                <div class="stat-icon revenue">
                                    <i class="fas fa-rupee-sign"></i>
                                </div>
                                <div class="stat-content">
                                    <h3>₹<%= stats.totalRevenue.toLocaleString('en-IN') %></h3>
                                    <p>Total Revenue</p>
                                </div>
                            </div>
                        </div>

                        <!-- Search and Filter Section -->
                        <div class="search-filter-section">
                            <div class="search-container">
                                <i class="fas fa-search search-icon"></i>
                                <input type="text" class="search-input" placeholder="Search by Order ID, Customer"
                                       id="searchInput" value="<%= search %>">
                            </div>

                            <div class="filter-section">
                                <select class="status-filter" id="statusFilter">
                                    <option value="all" <%= status === 'all' || status === '' ? 'selected' : '' %>>All Status</option>
                                    <option value="Pending" <%= status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                    <option value="Processing" <%= status === 'Processing' ? 'selected' : '' %>>Processing</option>
                                    <option value="Shipped" <%= status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                    <option value="Delivered" <%= status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                    <option value="Cancelled" <%= status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                    <option value="Returned" <%= status === 'Returned' ? 'selected' : '' %>>Returned</option>
                                </select>

                                <button class="notification-btn" onclick="exportOrders()">
                                    <i class="fas fa-download"></i>
                                    <span>Export</span>
                                </button>
                            </div>
                        </div>

                        <!-- Orders Table -->
                        <div class="table-container">
                            <table class="orders-table" id="ordersTable">
                                <thead>
                                    <tr>
                                        <th>Order ID</th>
                                        <th>Customer</th>
                                        <th>Date</th>
                                        <th>Items</th>
                                        <th>Amount</th>
                                        <th>Payment</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="ordersTableBody">
                                    <% if (orders && orders.length > 0) { %>
                                        <% orders.forEach(order => { %>
                                            <tr data-order-id="<%= order.orderId %>" data-customer="<%= order.userId ? order.userId.name : 'N/A' %>" data-status="<%= order.status.toLowerCase() %>">
                                                <td>
                                                    <div class="order-id"><%= order.orderId %></div>
                                                </td>
                                                <td>
                                                    <div class="customer-info">
                                                        <div class="customer-avatar">
                                                            <%= order.userId && order.userId.name ? order.userId.name.charAt(0).toUpperCase() : 'N' %>
                                                        </div>
                                                        <div class="customer-details">
                                                            <h4><%= order.userId ? order.userId.name : 'N/A' %></h4>
                                                            <p><%= order.userId ? order.userId.email : 'N/A' %></p>
                                                            <p><%= order.userId ? order.userId.phone : 'N/A' %></p>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="order-date">
                                                        <%= new Date(order.createdOn).toLocaleDateString('en-IN') %><br>
                                                        <%= new Date(order.createdOn).toLocaleTimeString('en-IN', {
                                                            hour: '2-digit',
                                                            minute: '2-digit',
                                                            second: '2-digit'
                                                        }) %>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="order-items">
                                                        <div class="items-count"><%= order.orderedItems.length %> item(s)</div>
                                                        <div class="items-qty">Qty: <%= order.orderedItems.reduce((total, item) => total + item.quantity, 0) %></div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="order-amount">₹<%= order.finalAmount.toLocaleString('en-IN') %></div>
                                                </td>
                                                <td>
                                                    <div class="payment-method">Cash on Delivery</div>
                                                </td>
                                                <td>
                                                    <span class="status-badge status-<%= order.status.toLowerCase() %>">
                                                        <%= order.status.toUpperCase() %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="action-buttons">
                                                        <button class="action-btn view-btn" onclick="viewOrder('<%= order.orderId %>')">
                                                            <i class="fas fa-eye"></i> View
                                                        </button>
                                                        <button class="action-btn status-btn" onclick="updateStatus('<%= order.orderId %>')">
                                                            <i class="fas fa-edit"></i> Status
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="8" style="text-align: center; padding: 40px; color: #6b7280;">
                                                <i class="fas fa-inbox" style="font-size: 3rem; margin-bottom: 15px; opacity: 0.5;"></i>
                                                <h3 style="margin: 0 0 10px 0; font-weight: 500;">No Orders Found</h3>
                                                <p style="margin: 0; opacity: 0.7;">There are no orders matching your current filters.</p>
                                            </td>
                                        </tr>
                                    <% } %>

                                </tbody>
                            </table>

                            <!-- Pagination Controls -->
                            <% if (totalPages > 1) { %>
                                <div class="pagination-container">
                                    <div class="pagination-info">
                                        <span>Showing <%= ((currentPage - 1) * limit) + 1 %> to <%= Math.min(currentPage * limit, totalOrders) %> of <%= totalOrders %> orders</span>
                                    </div>
                                    <div class="pagination-controls">
                                        <% if (currentPage > 1) { %>
                                            <a href="?page=<%= currentPage - 1 %>&search=<%= search %>&status=<%= status %>&limit=<%= limit %>" class="pagination-btn">
                                                <i class="fas fa-chevron-left"></i> Previous
                                            </a>
                                        <% } %>

                                        <div class="pagination-numbers">
                                            <%
                                                let startPage = Math.max(1, currentPage - 2);
                                                let endPage = Math.min(totalPages, currentPage + 2);

                                                if (startPage > 1) { %>
                                                    <a href="?page=1&search=<%= search %>&status=<%= status %>&limit=<%= limit %>" class="pagination-number">1</a>
                                                    <% if (startPage > 2) { %>
                                                        <span class="pagination-dots">...</span>
                                                    <% } %>
                                                <% }

                                                for (let i = startPage; i <= endPage; i++) { %>
                                                    <a href="?page=<%= i %>&search=<%= search %>&status=<%= status %>&limit=<%= limit %>"
                                                       class="pagination-number <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
                                                <% }

                                                if (endPage < totalPages) { %>
                                                    <% if (endPage < totalPages - 1) { %>
                                                        <span class="pagination-dots">...</span>
                                                    <% } %>
                                                    <a href="?page=<%= totalPages %>&search=<%= search %>&status=<%= status %>&limit=<%= limit %>" class="pagination-number"><%= totalPages %></a>
                                                <% } %>
                                        </div>

                                        <% if (currentPage < totalPages) { %>
                                            <a href="?page=<%= currentPage + 1 %>&search=<%= search %>&status=<%= status %>&limit=<%= limit %>" class="pagination-btn">
                                                Next <i class="fas fa-chevron-right"></i>
                                            </a>
                                        <% } %>
                                    </div>
                                </div>
                            <% } %>

                            <!-- Empty State (hidden by default) -->
                            <div class="empty-state" id="emptyState">
                                <i class="fas fa-inbox"></i>
                                <h3>No orders found</h3>
                                <p>No orders match your current search criteria.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Toggle sidebar for mobile
        function toggleSidebar() {
            const sidebar = document.getElementById('adminSidebar');
            sidebar.classList.toggle('open');
        }

        // Handle search functionality
        document.getElementById('searchInput').addEventListener('input', function(event) {
            const searchTerm = event.target.value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            filterOrders(searchTerm, statusFilter);
        });

        // Handle status filter
        document.getElementById('statusFilter').addEventListener('change', function(event) {
            const statusFilter = event.target.value;
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            filterOrders(searchTerm, statusFilter);
        });

        // Filter orders function
        function filterOrders(searchTerm, statusFilter) {
            const rows = document.querySelectorAll('#ordersTableBody tr');
            const emptyState = document.getElementById('emptyState');
            let visibleCount = 0;

            rows.forEach(row => {
                const orderId = row.getAttribute('data-order-id') || '';
                const customer = row.getAttribute('data-customer') || '';
                const status = row.getAttribute('data-status') || '';

                const matchesSearch = 
                    orderId.toLowerCase().includes(searchTerm) ||
                    customer.toLowerCase().includes(searchTerm);

                const matchesStatus = !statusFilter || status === statusFilter;

                if (matchesSearch && matchesStatus) {
                    row.classList.remove('hidden');
                    visibleCount++;
                } else {
                    row.classList.add('hidden');
                }
            });

            // Show/hide empty state
            if (visibleCount === 0) {
                emptyState.style.display = 'block';
            } else {
                emptyState.style.display = 'none';
            }
        }

        // View order details
        function viewOrder(orderId) {
            // Get order data from the row
            const row = document.querySelector(`tr[data-order-id="${orderId}"]`);
            if (row) {
                const customerName = row.querySelector('.customer-details h4').textContent;
                const customerEmail = row.querySelector('.customer-details p:first-of-type').textContent;
                const customerPhone = row.querySelector('.customer-details p:last-of-type').textContent;
                const orderDate = row.querySelector('.order-date').textContent.trim();
                const items = row.querySelector('.items-count').textContent;
                const amount = row.querySelector('.order-amount').textContent;
                const payment = row.querySelector('.payment-method').textContent;
                const status = row.querySelector('.status-badge').textContent;

                Swal.fire({
                    title: `Order Details - ${orderId}`,
                    html: `
                        <div style="text-align: left; padding: 20px;">
                            <h4>Customer Information</h4>
                            <p><strong>Name:</strong> ${customerName}</p>
                            <p><strong>Email:</strong> ${customerEmail}</p>
                            <p><strong>Phone:</strong> ${customerPhone}</p>
                            <hr>
                            <h4>Order Information</h4>
                            <p><strong>Date:</strong> ${orderDate}</p>
                            <p><strong>Items:</strong> ${items}</p>
                            <p><strong>Amount:</strong> ${amount}</p>
                            <p><strong>Payment:</strong> ${payment}</p>
                            <p><strong>Status:</strong> ${status}</p>
                        </div>
                    `,
                    width: 600,
                    confirmButtonText: 'Close',
                    confirmButtonColor: '#3b82f6'
                });
            }
        }

        // Update order status
        function updateStatus(orderId) {
            const row = document.querySelector(`tr[data-order-id="${orderId}"]`);
            if (row) {
                const currentStatus = row.getAttribute('data-status');
                
                Swal.fire({
                    title: 'Update Order Status',
                    text: `Current status: ${currentStatus.toUpperCase()}`,
                    input: 'select',
                    inputOptions: {
                        'pending': 'Pending',
                        'processing': 'Processing',
                        'delivered': 'Delivered',
                        'returned': 'Returned',
                        'cancelled': 'Cancelled'
                    },
                    inputValue: currentStatus,
                    showCancelButton: true,
                    confirmButtonText: 'Update Status',
                    confirmButtonColor: '#3b82f6',
                    cancelButtonColor: '#6b7280'
                }).then((result) => {
                    if (result.isConfirmed && result.value !== currentStatus) {
                        // Update the status in the DOM
                        row.setAttribute('data-status', result.value);
                        const statusBadge = row.querySelector('.status-badge');
                        statusBadge.className = `status-badge status-${result.value}`;
                        statusBadge.textContent = result.value.toUpperCase();
                        
                        Swal.fire({
                            title: 'Status Updated!',
                            text: `Order ${orderId} status has been updated to ${result.value.toUpperCase()}`,
                            icon: 'success',
                            confirmButtonColor: '#10b981'
                        });
                    }
                });
            }
        }

        // Show notifications
        function showNotifications() {
            Swal.fire({
                title: 'Notifications',
                html: `
                    <div style="text-align: left;">
                        <div style="padding: 10px; border-left: 4px solid #f59e0b; margin-bottom: 10px; background: #fef3c7;">
                            <strong>New Order:</strong> ORD-20250702-9323 requires attention
                        </div>
                        <div style="padding: 10px; border-left: 4px solid #ef4444; margin-bottom: 10px; background: #fecaca;">
                            <strong>Return Request:</strong> Customer requested return for order ORD-20250701-3533
                        </div>
                        <div style="padding: 10px; border-left: 4px solid #3b82f6; background: #dbeafe;">
                            <strong>Payment Pending:</strong> 2 orders have pending payments
                        </div>
                    </div>
                `,
                width: 500,
                confirmButtonText: 'Mark as Read',
                confirmButtonColor: '#3b82f6'
            }).then(() => {
                // Reset notification badge
                document.querySelector('.notification-badge').textContent = '0';
                document.querySelector('.notification-badge').style.display = 'none';
            });
        }

        // Close sidebar when clicking outside on mobile
        document.addEventListener('click', function(event) {
            const sidebar = document.getElementById('adminSidebar');
            const menuToggle = document.querySelector('.menu-toggle');
            
            if (window.innerWidth <= 1024 && 
                !sidebar.contains(event.target) && 
                !menuToggle.contains(event.target) && 
                sidebar.classList.contains('open')) {
                sidebar.classList.remove('open');
            }
        });

        // View order details function
        function viewOrder(orderId) {
            // For now, show an alert - this can be enhanced with a modal later
            alert(`Viewing order details for: ${orderId}`);

            // Future implementation: Open modal with order details
            // fetch(`/admin/order-details/${orderId}`)
            //     .then(response => response.json())
            //     .then(data => {
            //         // Populate modal with order details
            //         showOrderDetailsModal(data);
            //     })
            //     .catch(error => {
            //         console.error('Error fetching order details:', error);
            //         alert('Error loading order details');
            //     });
        }

        // Update order status function
        function updateStatus(orderId) {
            const validStatuses = ['Pending', 'Processing', 'Shipped', 'Delivered', 'Cancelled', 'Return Request', 'Returned'];

            // Create status selection HTML
            let statusOptions = validStatuses.map(status =>
                `<option value="${status}">${status}</option>`
            ).join('');

            // For now, use prompt - this can be enhanced with a modal later
            const newStatus = prompt(`Update status for order ${orderId}:\n\nAvailable statuses:\n- Pending\n- Processing\n- Shipped\n- Delivered\n- Cancelled\n- Return Request\n- Returned\n\nEnter new status:`);

            if (newStatus && validStatuses.includes(newStatus)) {
                // Send AJAX request to update status
                fetch('/admin/update-order-status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        status: newStatus
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Order status updated successfully!');
                        // Reload the page to show updated status
                        window.location.reload();
                    } else {
                        alert('Error updating order status: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error updating order status:', error);
                    alert('Error updating order status');
                });
            } else if (newStatus) {
                alert('Invalid status. Please enter one of the valid statuses.');
            }
        }

        // Export orders function (placeholder)
        function exportOrders() {
            alert('Export functionality will be implemented in the next phase');
            // Future implementation: Generate and download CSV/Excel file
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>