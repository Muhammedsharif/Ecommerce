
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

    <title>My Addresses - 1NOTONE</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Layout Container for Sidebar + Main Content */
        .layout-container {
            display: flex;
            gap: 30px;
            align-items: flex-start;
        }

        /* Profile Sidebar Styles */
        .profile-sidebar {
            flex: 0 0 280px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            padding: 24px;
            position: sticky;
            top: 20px;
        }

        .profile-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .profile-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(45deg, #6366f1, #8b5cf6);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 16px;
            color: white;
            font-size: 32px;
            font-weight: 600;
        }

        .profile-name {
            font-size: 20px;
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
        }

        .profile-status {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            color: #28a745;
            font-size: 14px;
        }

        .status-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #28a745;
        }

        .sidebar-section {
            margin-bottom: 24px;
        }

        .sidebar-title {
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            color: #6c757d;
            margin-bottom: 12px;
        }

        .sidebar-menu {
            list-style: none;
        }

        .sidebar-menu li {
            margin-bottom: 4px;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 12px 16px;
            border-radius: 8px;
            text-decoration: none;
            color: #6c757d;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .sidebar-menu a:hover {
            background: #f8f9ff;
            color: #4285f4;
        }

        .sidebar-menu a.active {
            background: linear-gradient(45deg, #6366f1, #8b5cf6);
            color: white;
        }

        .sidebar-icon {
            width: 18px;
            height: 18px;
            fill: currentColor;
        }

        /* Main Content Area */
        .main-content {
            flex: 1;
            min-width: 0; /* Prevents flex item from overflowing */
        }

        .breadcrumb {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 14px;
            color: #6c757d;
        }

        .breadcrumb a {
            color: #6c757d;
            text-decoration: none;
        }

        .breadcrumb a:hover {
            color: #495057;
        }

        .breadcrumb-separator {
            margin: 0 8px;
            color: #6c757d;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .page-header a{
            text-decoration: none;
        }

        .page-title {
            font-size: 28px;
            font-weight: 600;
            color: #4285f4;
            margin-bottom: 5px;
        }

        .page-subtitle {
            color: #6c757d;
            font-size: 16px;
        }

        .add-address-btn {
            background: linear-gradient(45deg, #4285f4, #34a853);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(66, 133, 244, 0.3);
        }

        .add-address-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(66, 133, 244, 0.4);
        }

        .addresses-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .address-item {
            padding: 24px;
            border-bottom: 1px solid #e9ecef;
            position: relative;
            transition: all 0.3s ease;
        }

        .address-item:hover {
            background-color: #f8f9ff;
        }

        .address-item:last-child {
            border-bottom: none;
        }

        .address-header {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 16px;
        }

        .address-type {
          display: flex
;
    align-items: center;
    gap: 7px;
    font-weight: 600;
    font-size: 12px;
    color: #ffffff;
     background: linear-gradient(45deg, #85de98, #90d3be);
    border-radius: 22px;
    padding: 2px;
}

        .address-icon {
            width: 20px;
            height: 20px;
            fill: #6c757d;
        }

        .default-badge {
             background: linear-gradient(45deg, #85de98, #90d3be);
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .badge-icon {
            font-size: 10px;
        }

        .badge-text {
            font-size: 11px;
        }

        .address-name {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 8px;
        }

        .address-details {
            color: #6c757d;
            line-height: 1.6;
            margin-bottom: 8px;
        }

        .address-phone {
            color: #4285f4;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 20px;
        }

        .phone-icon {
            width: 16px;
            height: 16px;
            fill: #4285f4;
        }

        .address-actions {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            border: 1px solid;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 6px;
            text-decoration: none;
        }

        .btn-edit {
            background: white;
            color: #4285f4;
            border-color: #4285f4;
        }

        .btn-edit:hover {
            background: #4285f4;
            color: white;
            transform: translateY(-1px);
        }

        .btn-default {
            background: white;
            color: #28a745;
            border-color: #28a745;
        }

        .btn-default:hover {
            background: #28a745;
            color: white;
            transform: translateY(-1px);
        }

        .btn-delete {
            background: white;
            color: #dc3545;
            border-color: #dc3545;
        }

        .btn-delete:hover {
            background: #dc3545;
            color: white;
            transform: translateY(-1px);
        }

        .btn-icon {
            width: 14px;
            height: 14px;
            fill: currentColor;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #6c757d;
        }

        .empty-icon {
            width: 80px;
            height: 80px;
            fill: #dee2e6;
            margin-bottom: 16px;
        }

        .empty-state {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 60vh;
  text-align: center;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.empty-state-content {
  max-width: 400px;
}

.empty-state-icon {
  background: linear-gradient(135deg, #5b6df8, #a854e9);
  color: white;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto 20px auto;
  font-size: 30px;
}

.empty-state h2 {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 10px;
  color: #1f1f1f;
}

.empty-state p {
  color: #6c757d;
  margin-bottom: 20px;
  font-size: 16px;
}

.btn-primary {
  background: linear-gradient(135deg, #5b6df8, #a854e9);
  color: white;
  padding: 12px 20px;
  border-radius: 8px;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  font-weight: 500;
  transition: background 0.3s ease;
}

.btn-primary:hover {
  background: linear-gradient(135deg, #4a5de2, #9244d5);
}


        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            backdrop-filter: blur(4px);
        }

        .modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            padding: 24px;
            border-radius: 12px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
            max-width: 400px;
            width: 90%;
            text-align: center;
        }

        .modal-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 12px;
            color: #333;
        }

        .modal-text {
            color: #6c757d;
            margin-bottom: 24px;
            line-height: 1.5;
        }

        .modal-actions {
            display: flex;
            gap: 12px;
            justify-content: center;
        }

        .success-icon {
            display: flex;
            justify-content: center;
            margin-bottom: 16px;
        }

        .success-icon svg {
            animation: checkmark 0.6s ease-in-out;
        }

        @keyframes checkmark {
            0% {
                transform: scale(0);
                opacity: 0;
            }
            50% {
                transform: scale(1.2);
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #28a745;
            color: white;
            padding: 16px 24px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transform: translateX(400px);
            transition: transform 0.3s ease;
            z-index: 1001;
        }

        .toast.show {
            transform: translateX(0);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 16px;
            }

            .layout-container {
                flex-direction: column;
                gap: 20px;
            }

            .profile-sidebar {
                flex: none;
                position: static;
            }

            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 16px;
            }

            .add-address-btn {
                width: 100%;
                justify-content: center;
            }

            .address-actions {
                flex-direction: column;
            }

            .btn {
                justify-content: center;
                width: 100%;
            }

            .sidebar-menu a {
                padding: 8px 12px;
                font-size: 14px;
            }

            .profile-avatar {
                width: 60px;
                height: 60px;
                font-size: 24px;
            }
        }

        @media (max-width: 480px) {
            .addresses-container {
                margin: 0 -10px;
                border-radius: 8px;
            }

            .address-item {
                padding: 16px;
            }

            .page-title {
                font-size: 24px;
            }
        }
    </style>
</head>
<body>
    <!-- Header would be included here -->
   
    <%- include("../partials/user/header") %> 
    <div class="container">
        <div class="layout-container">
            <!-- Profile Sidebar -->
         
<%- include("../partials/user/profilesidebar") %>

            <!-- Main Content -->
            <div class="main-content">
                <!-- Breadcrumb -->
                <!-- Breadcrumb Navigation -->
                <%- include("../partials/user/breadcrumb", {
                    breadcrumbs: [
                        { name: "My Account", url: "/profile" },
                        { name: "My Address", url: "/address" }
                    ]
                }) %>

                <!-- Page Header -->
                <div class="page-header">
                    <div>
                        <h1 class="page-title">My Addresses</h1>
                        <p class="page-subtitle">Manage your delivery locations</p>
                    </div>
                   <a href="/addAddress"><button class="add-address-btn" onclick="addNewAddress()">
                        <svg class="btn-icon" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
                        </svg>
                        Add New Address
                    </button></a> 
                </div>

                <!-- Addresses Container -->

                <div class="addresses-container" id="addressesContainer">
                    <!-- Default Address -->
                     <%if(addresses.length>0){%>
                        <%addresses.forEach((address)=>{%>
                    <div class="address-item">
                        <div class="address-header">
                            <div class="address-type">
                                <i class="fas fa-map-marker-alt"></i>
                                <%=address.addressType%>
                            </div>
                            <% if (address.isDefault) { %>
                      <div class="default-badge">
                        <span class="badge-icon"><i class="fas fa-check"></i></span>
                        <span class="badge-text">Default</span>
                      </div>
                    <% } %>
                        </div>
                        
                        <div class="address-name"><%=address.name%></div>
                        
                        <div class="address-details">
                            <%=address.city%><br>
                            <%=address.landmark%><br>
                            <%=address.state%> - <%=address.pincode%><br>
                            
                        </div>
                        
                        <div class="address-phone">
                            <svg class="phone-icon" viewBox="0 0 24 24">
                                <path d="M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"/>
                            </svg>
                            <%=address.phone%>
                        </div>
                        
                        <div class="address-actions">
                            <% if (!address.isDefault) { %>
                                <button class="btn btn-default" onclick="setDefaultAddress('<%= address._id %>', '<%= address.name %>')">
                                    <svg class="btn-icon" viewBox="0 0 24 24">
                                        <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                                    </svg>
                                    Set as Default
                                </button>
                            <% } %>
                            <a href="/editAddress?id=<%=address._id%>" class="btn btn-edit">
                                <svg class="btn-icon" viewBox="0 0 24 24">
                                    <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"/>
                                </svg>
                                Edit
                            </a>
                            <button class="btn btn-delete" data-address-id="<%= address._id %>" data-address-name="<%= address.name %>">
                                <svg class="btn-icon" viewBox="0 0 24 24">
                                    <path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"/>
                                </svg>
                                Delete
                            </button>
                        </div>
                    </div>
                    <%})%><%}else{%>
                         <div class="empty-state">
              <div class="empty-state-content">
                <div class="empty-state-icon">
                  <i class="fas fa-map-marker-alt"></i>
                </div>
                <h2>No addresses found</h2>
                <p>You haven't added any delivery locations to your account yet.</p>
                <a href="/addAddress" class="btn-primary">
                  <i class="fas fa-plus"></i> Add Your First Address
                </a>
              </div>
            </div>
          <% } %>
                   
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal" id="deleteModal">
        <div class="modal-content">
            <h3 class="modal-title">Delete Address</h3>
            <p class="modal-text">Are you sure you want to delete this address? This action cannot be undone.</p>
            <div class="modal-actions">
                <button class="btn btn-edit" onclick="closeModal('deleteModal')">Cancel</button>
                <button class="btn btn-delete" onclick="confirmDelete()">Delete</button>
            </div>
        </div>
    </div>

    <!-- Success Modal -->
    <div class="modal" id="successModal">
        <div class="modal-content">
            <div class="success-icon">
                <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="#28a745" stroke-width="2">
                    <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                    <polyline points="22,4 12,14.01 9,11.01"></polyline>
                </svg>
            </div>
            <h3 class="modal-title" id="successTitle">Success!</h3>
            <p class="modal-text" id="successMessage">Operation completed successfully.</p>
            <div class="modal-actions">
                <button class="btn btn-primary" onclick="closeModal('successModal')">OK</button>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div class="toast" id="toast"></div>

    <script>
        let addressToDelete = null;

        function navigateHome() {
            console.log('Navigate to home');
        }

        function navigateAccount() {
            console.log('Navigate to account');
        }

        function addNewAddress() {
            console.log('Add new address');
            showToast('Redirecting to add address form...', 'info');
        }

        function editAddress(id) {
            console.log('Edit address:', id);
            showToast('Redirecting to edit address form...', 'info');
        }

        function deleteAddress(id, name) {
            addressToDelete = { id, name };
            const modal = document.getElementById('deleteModal');
            if (modal) {
                modal.classList.add('active');
            } else {
                console.error('Delete modal not found!');
                // Fallback: show browser confirm dialog
                if (confirm(`Are you sure you want to delete the address for ${name}?`)) {
                    confirmDelete();
                }
            }
        }

        async function confirmDelete() {
            if (addressToDelete) {
                try {
                    console.log('Deleting address:', addressToDelete);

                    const response = await fetch(`/deleteAddress?id=${addressToDelete.id}`, {
                        method: 'GET'
                    });

                    console.log('Response status:', response.status); // Debug log
                    console.log('Response ok:', response.ok); // Debug log

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const data = await response.json();
                    console.log('Delete response:', data); // Debug log

                    if (data.success) {
                        showToast(`Address for ${addressToDelete.name} has been deleted.`, 'success');
                        closeModal('deleteModal');

                        // Reload the page to reflect changes
                        setTimeout(() => {
                            window.location.reload();
                        }, 500);
                    } else {
                        showToast(data.message || 'Failed to delete address', 'error');
                        closeModal('deleteModal');
                    }
                } catch (error) {
                    console.error('Error deleting address:', error);
                    showToast('An error occurred while deleting address', 'error');
                    closeModal('deleteModal');
                }
            }
        }

        async function setDefaultAddress(addressId, name) {
            try {
                console.log('Setting default address:', addressId, name);

                const response = await fetch('/setDefaultAddress', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ addressId: addressId })
                });

                const data = await response.json();

                if (data.success) {
                    showToast(`${name}'s address set as default.`, 'success');

                    // Reload the page to reflect changes
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast(data.message || 'Failed to set default address', 'error');
                }
            } catch (error) {
                console.error('Error setting default address:', error);
                showToast('An error occurred while setting default address', 'error');
            }
        }

        function closeModal(modalId = 'deleteModal') {
            document.getElementById(modalId).classList.remove('active');
            if (modalId === 'deleteModal') {
                addressToDelete = null;
            }
        }

        function showSuccessModal(title, message) {
            document.getElementById('successTitle').textContent = title;
            document.getElementById('successMessage').textContent = message;
            document.getElementById('successModal').classList.add('active');
        }

        function showToast(message, type = 'success') {
            console.log('showToast called:', message, type); // Debug log

            // Try the main toast first
            const toast = document.getElementById('toast');
            if (toast) {
                toast.textContent = message;
                toast.className = `toast show ${type}`;

                toast.style.background = '#000000';
                toast.style.color = '#ffffff';

                console.log('Toast should be visible now'); // Debug log

                setTimeout(() => {
                    toast.classList.remove('show');
                    console.log('Toast hidden'); // Debug log
                }, 3000);
            } else {
                // Fallback: Create a simple toast
                showSimpleToast(message, type);
            }
        }

        // Simple fallback toast function
        function showSimpleToast(message, type = 'success') {
            console.log('showSimpleToast called:', message, type);

            // Remove any existing simple toast
            const existingToast = document.querySelector('.simple-toast');
            if (existingToast) {
                existingToast.remove();
            }

            // Create toast element
            const toast = document.createElement('div');
            toast.className = 'simple-toast';
            toast.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: #000000;
                color: #ffffff;
                padding: 15px 20px;
                border-radius: 8px;
                z-index: 999999;
                font-family: Arial, sans-serif;
                box-shadow: 0 4px 12px rgba(0,0,0,0.2);
                max-width: 300px;
                word-wrap: break-word;
                animation: slideIn 0.3s ease;
            `;
            toast.textContent = message;

            // Add CSS animation
            const style = document.createElement('style');
            style.textContent = `
                @keyframes slideIn {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
                @keyframes slideOut {
                    from { transform: translateX(0); opacity: 1; }
                    to { transform: translateX(100%); opacity: 0; }
                }
            `;
            document.head.appendChild(style);

            // Add to body
            document.body.appendChild(toast);

            // Remove after 3 seconds
            setTimeout(() => {
                toast.style.animation = 'slideOut 0.3s ease';
                setTimeout(() => {
                    if (toast && toast.parentNode) {
                        toast.parentNode.removeChild(toast);
                    }
                }, 300);
            }, 3000);

            console.log('Simple toast created:', message);
        }

        // Close modal when clicking outside
        // Close modals when clicking outside
        document.getElementById('deleteModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal('deleteModal');
            }
        });

        document.getElementById('successModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal('successModal');
            }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                const deleteModal = document.getElementById('deleteModal');
                const successModal = document.getElementById('successModal');

                if (deleteModal.classList.contains('active')) {
                    closeModal('deleteModal');
                } else if (successModal.classList.contains('active')) {
                    closeModal('successModal');
                }
            }
        });



        // Check for URL parameters and show success messages
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);

            if (urlParams.has('added')) {
                showSuccessModal('Address Added!', 'Your new address has been successfully added.');
                // Clean URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }

            if (urlParams.has('updated')) {
                showSuccessModal('Address Updated!', 'Your address has been successfully updated.');
                // Clean URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }

            if (urlParams.has('deleted')) {
                showSuccessModal('Address Deleted!', 'The address has been successfully deleted.');
                // Clean URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }

            // Add event delegation for delete buttons
            document.addEventListener('click', function(e) {
                if (e.target.closest('.btn-delete[data-address-id]')) {
                    e.preventDefault();
                    e.stopPropagation();

                    const button = e.target.closest('.btn-delete[data-address-id]');
                    const addressId = button.getAttribute('data-address-id');
                    const addressName = button.getAttribute('data-address-name');

                    deleteAddress(addressId, addressName);
                }
            });


        });

        // Handle empty state (uncomment to test)
        // function showEmptyState() {
        //     const container = document.getElementById('addressesContainer');
        //     container.innerHTML = `
        //         <div class="empty-state">
        //             <svg class="empty-icon" viewBox="0 0 24 24">
        //                 <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
        //             </svg>
        //             <h3>No addresses found</h3>
        //             <p>Add your first delivery address to get started.</p>
        //         </div>
        //     `;
        // }
    </script>
</body>
</html>