<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <title>1NOTONE - My Wishlist</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }

        /* Header */
        .header {
            background: white;
            padding: 1rem 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 2rem;
        }

        .logo {
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }

        .nav-menu {
            display: flex;
            gap: 2rem;
            list-style: none;
        }

        .nav-menu a {
            text-decoration: none;
            color: #333;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .nav-menu a:hover {
            color: #667eea;
        }

        .nav-icons {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .nav-icons i {
            font-size: 20px;
            color: #333;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .nav-icons i:hover {
            color: #667eea;
        }

        /* Main Container */
        .container {
            display: flex;
            max-width: 1400px;
            margin: 0 auto;
            gap: 2rem;
            padding: 2rem;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            height: fit-content;
            position: sticky;
            top: 120px;
        }

        .profile-section {
            text-align: center;
            margin-bottom: 2rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e5e7eb;
        }

        .profile-avatar {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 32px;
            font-weight: bold;
            margin: 0 auto 1rem;
        }

        .profile-name {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .profile-status {
            color: #10b981;
            font-size: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .menu-section {
            margin-bottom: 2rem;
        }

        .menu-title {
            font-size: 12px;
            font-weight: 600;
            color: #9ca3af;
            text-transform: uppercase;
            margin-bottom: 1rem;
            letter-spacing: 0.5px;
        }

        .menu-items {
            list-style: none;
        }

        .menu-item {
            margin-bottom: 0.5rem;
        }

        .menu-item a {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 12px 16px;
            text-decoration: none;
            color: #4b5563;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .menu-item a:hover,
        .menu-item a.active {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
            color: #667eea;
        }

        .menu-item i {
            width: 16px;
            font-size: 16px;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        }

        /* Wishlist Header */
        .wishlist-header {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
            border-radius: 16px;
            padding: 24px;
            margin-bottom: 32px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 16px;
        }

        .header-left {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .header-icon {
            background: #3b82f6;
            padding: 12px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .header-icon i {
            color: white;
            font-size: 20px;
        }

        .header-info h2 {
            font-size: 24px;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 4px;
        }

        .header-info p {
            color: #4b5563;
            margin-bottom: 8px;
        }

        .item-count-badge {
            background: #3b82f6;
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
        }

        .header-actions {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .view-toggle-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            background: #e5e7eb;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .view-toggle-btn:hover {
            background: #d1d5db;
        }

        .empty-wishlist-btn {
            background: #ef4444;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
            transition: background-color 0.3s ease;
        }

        .empty-wishlist-btn:hover {
            background: #dc2626;
        }

        /* Products Grid - 3 per row */
        .products-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 24px;
            margin-bottom: 32px;
        }

        .product-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            transition: all 0.3s ease;
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.15);
        }

        .product-image {
            position: relative;
            width: 100%;
            height: 234px;
            overflow: hidden;
            background: #f8f9fa;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-card:hover .product-image img {
            transform: scale(1.05);
        }

        .discount-badge {
            position: absolute;
            top: 16px;
            left: 16px;
            background: linear-gradient(45deg, #ff6b6b, #ff8e53);
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            z-index: 2;
        }

        .remove-btn {
            position: absolute;
            top: 16px;
            right: 16px;
            background: white;
            border: none;
            padding: 8px;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            z-index: 2;
        }

        .remove-btn:hover {
            background: #fef2f2;
            transform: scale(1.1);
        }

        .remove-btn i {
            color: #ef4444;
            font-size: 14px;
        }

        .product-info {
            padding: 24px;
            position: relative;
            bottom: 20px;
        }

        .product-brand {
            color: #2563eb;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 4px;
            text-transform: uppercase;
        }

        .product-title {
            font-size: 16px;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 16px;
            line-height: 1.4;
        }

        .product-price {
            font-size: 24px;
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 16px;
        }

        .size-selector {
            margin-bottom: 16px;
        }

        .size-selector label {
            display: block;
            font-size: 14px;
            font-weight: 500;
            color: #374151;
            margin-bottom: 8px;
        }

        .size-selector select {
            width: 100%;
            padding: 12px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 14px;
            background: white;
            cursor: pointer;
            transition: border-color 0.3s ease;
        }

        .size-selector select:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
        }

        .product-actions {
            display: flex;
            gap: 12px;
        }

        .add-to-cart-btn {
            flex: 1;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 16px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .add-to-cart-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

        .view-btn {
            background: #f3f4f6;
            border: none;
            padding: 12px;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .view-btn:hover {
            background: #e5e7eb;
        }

        .view-btn i {
            color: #4b5563;
            font-size: 16px;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 64px 20px;
            display: none;
        }

        .empty-state.show {
            display: block;
        }

        .empty-state i {
            color: #d1d5db;
            font-size: 60px;
            margin-bottom: 16px;
        }

        .empty-state h3 {
            font-size: 24px;
            font-weight: 600;
            color: #4b5563;
            margin-bottom: 8px;
        }

        .empty-state p {
            color: #6b7280;
            margin-bottom: 32px;
        }

        .continue-shopping-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .continue-shopping-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .products-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .container {
                flex-direction: column;
                padding: 1rem;
                gap: 1rem;
            }

            .sidebar {
                display: none;
            }

            .header-content {
                padding: 0 1rem;
            }

            .nav-menu {
                display: none;
            }

            .wishlist-header {
                flex-direction: column;
                align-items: flex-start;
                text-align: left;
            }

            .header-actions {
                align-self: stretch;
                justify-content: space-between;
            }

            .products-grid {
                grid-template-columns: 1fr;
            }

            .main-content {
                padding: 1rem;
            }
        }

        @media (max-width: 480px) {
            .product-image {
                height: 220px;
            }

            .product-info {
                padding: 16px;
            }

            .product-price {
                font-size: 20px;
            }
        }

        /* Animation for item removal */
        .removing {
            opacity: 0;
            transform: scale(0.8);
            transition: all 0.3s ease;
        }

        /* Empty wishlist styles */
        .empty-wishlist {
            text-align: center;
            padding: 4rem 2rem;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            margin: 2rem;
        }

        .empty-icon {
            font-size: 4rem;
            color: #e74c3c;
            margin-bottom: 1.5rem;
        }

        .empty-wishlist h3 {
            font-size: 1.8rem;
            color: #333;
            margin-bottom: 1rem;
        }

        .empty-wishlist p {
            color: #666;
            font-size: 1.1rem;
            margin-bottom: 2rem;
        }

        .shop-now-btn {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .shop-now-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
            color: white;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <!-- Header -->
 <%- include("../partials/user/header") %>

    <!-- Profile Hamburger Button for Mobile -->
    <button class="profile-hamburger" onclick="openProfileSidebar(event)" title="Profile Menu">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Breadcrumb Navigation -->
    <%- include("../partials/user/breadcrumb", {
        breadcrumbs: [
            { name: "My Account", url: "/profile" },
            { name: "Wishlist", url: "/wishlist" }
        ]
    }) %>

    <div class="container">
        <!-- Sidebar -->
       
<%- include("../partials/user/profilesidebar") %>
        <!-- Main Content -->
        <main class="main-content">
            <!-- Wishlist Header -->
            <div class="wishlist-header">
                <div class="header-left">
                    <div class="header-icon">
                        <i class="fas fa-heart"></i>
                    </div>
                    <div class="header-info">
                        <h2>My Wishlist</h2>
                        <p>Items you've saved for later</p>
                        <span class="item-count-badge"><%=wishlist.length%> Items</span>
                    </div>
                </div>
                
                <div class="header-actions">
                    <button class="view-toggle-btn">
                        <i class="fas fa-th-large"></i>
                        <i class="fas fa-list"></i>
                    </button>
                    <button class="empty-wishlist-btn" onclick="emptyWishlist()">
                        <i class="fas fa-trash"></i>
                        <span>Empty Wishlist</span>
                    </button>
                    
                </div>
            </div>

            <!-- Products Grid -->
            <div class="products-grid" id="productsGrid">
                <!-- Product 1 -->
                   <%if(wishlist.length>0){%>
                 <%for (let product of wishlist){%>
                <div class="product-card" data-item="1" data-product-id="<%= product._id %>">
                  
                        
                    <div class="product-image">
                        <img src="/uploads/product-images/<%=product.productImage[0]%>" alt="Union La X Air Jordan 4">
                        <div class="discount-badge">
                            <%
                            const productOffers = product.productOffer || 0;
                        const categoryOffers = product.category?.categoryOffer || 0;
                            const totalOfferr = Math.max(productOffers, categoryOffers);

                            %><%=totalOfferr%>%OFF</div>
                        <button class="remove-btn" onclick="confirmRemove('<%=product._id%>')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="product-info">
                        <h3 class="product-title"><%=product.productName%></h3>

                        <%
                        // Calculate maximum offer (product or category)
                        const productOffer = product.productOffer || 0;
                        const categoryOffer = product.category?.categoryOffer || 0;
                        const totalOffer = Math.max(productOffer, categoryOffer);

                        // Get first variant for initial pricing display (sorted by size)
                        const sortedVariants = product.variant.sort((a, b) => {
                            const aNum = parseFloat(a.size);
                            const bNum = parseFloat(b.size);
                            if (!isNaN(aNum) && !isNaN(bNum)) {
                                return aNum - bNum;
                            }
                            return a.size.localeCompare(b.size);
                        });
                        const firstVariant = sortedVariants[0];

                        // Calculate initial discounted price
                        const initialPrice = firstVariant ? firstVariant.varientPrice : 0;
                        const initialDiscountedPrice = totalOffer > 0 ?
                            Math.round(initialPrice - (initialPrice * totalOffer / 100)) :
                            initialPrice;
                        %>

                        <div class="product-price" data-product-id="<%=product._id%>">
                            <% if (totalOffer > 0) { %>
                                <span class="current-price">₹<%=Math.round(initialDiscountedPrice).toLocaleString('en-IN')%></span>
                               
                            <% } else { %>
                                <span class="current-price">₹<%=Math.round(initialPrice).toLocaleString('en-IN')%></span>
                            <% } %>
                        </div>

                        <div class="size-selector">
                            <label>Select Size:</label>
                            <select class="size-select" data-product-id="<%=product._id%>" onchange="updateWishlistPrice(this)">
                                <option value="">Choose a size</option>
                                <% if (product.variant && product.variant.length > 0) { %>
                                    <% sortedVariants.forEach(variant => { %>
                                        <% if (variant.varientquantity > 0) { %>
                                            <option value="<%= variant.size %>" data-price="<%= variant.varientPrice %>"><%= variant.size %></option>
                                        <% } %>
                                    <% }); %>
                                <% } else { %>
                                    <option value="N/A" disabled>No sizes available</option>
                                <% } %>
                            </select>
                        </div>

                        <!-- Hidden data for JavaScript calculations -->
                        <script type="application/json" class="product-data" data-product-id="<%=product._id%>">
                            {
                                "variants": <%- JSON.stringify(product.variant || []) %>,
                                "productOffer": <%- productOffer %>,
                                "categoryOffer": <%- categoryOffer %>,
                                "totalOffer": <%- totalOffer %>
                            }
                        </script>
                        <div class="product-actions">
                            <%
                                const hasStock = product.variant && product.variant.some(variant => variant.varientquantity > 0);
                            %>
                            <% if (hasStock) { %>
                                <button class="add-to-cart-btn" onclick="addToCart(this)">
                                    <i class="fas fa-shopping-cart"></i>
                                    <span>Add to Cart</span>
                                </button>
                            <% } else { %>
                                <button class="add-to-cart-btn" disabled style="background-color: #ccc; cursor: not-allowed;">
                                    <i class="fas fa-ban"></i>
                                    <span>Out of Stock</span>
                                </button>
                            <% } %>
                           <a href="/productDetails?id=<%= product._id %>"> <button class="view-btn">
                                <i class="fas fa-eye"></i>
                            </button></a>
                        </div>
                    </div>

                    
               
                
                </div>
                 <%}%>
                </div>
                <%}else{%>
                
                

            <!-- Empty State -->
            <div class="empty-state" id="emptyState">
                <i class="fas fa-heart"></i>
                <h3>Your wishlist is empty</h3>
                <p>Start adding items you love to see them here!</p>
                <button class="continue-shopping-btn">Continue Shopping</button>
            </div>
            <%}%>
            

        </main>
    </div>
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let itemCount = 3;

        

        // Toast notification function
        function showToast(message, type = 'success') {
            // Remove existing toasts
            const existingToasts = document.querySelectorAll('.toast-notification');
            existingToasts.forEach(toast => toast.remove());

            const toast = document.createElement('div');
            toast.className = `toast-notification toast-${type}`;
            toast.innerHTML = `
                <div class="toast-content">
                    <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                    <span>${message}</span>
                </div>
            `;

            // Add toast styles
            toast.style.cssText = `
                position: fixed;
                top: 650px;
                right: 20px;
                background: #000;
                color: #000;
                padding: 10px 10px;
                border-radius: 8px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                z-index: 10000;
                display: flex;
                align-items: center;
                gap: 10px;
                font-weight: 500;
                animation: slideInRight 0.3s ease-out;
                max-width: 350px;
                font-weight: 500;
                
            `;

            document.body.appendChild(toast);

            // Auto remove after 3 seconds
            setTimeout(() => {
                toast.style.animation = 'slideOutRight 0.3s ease-in';
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        // Add CSS animations for toast
        if (!document.getElementById('toast-styles')) {
            const style = document.createElement('style');
            style.id = 'toast-styles';
            style.textContent = `
                @keyframes slideInRight {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
                @keyframes slideOutRight {
                    from { transform: translateX(0); opacity: 1; }
                    to { transform: translateX(100%); opacity: 0; }
                }
                .toast-content {
                    display: flex;
                    align-items: center;
                    gap: 10px;
                }
            `;
            document.head.appendChild(style);
        }

        // Function to update wishlist price when size is changed
        function updateWishlistPrice(selectElement) {
            try {
                const productId = selectElement.getAttribute('data-product-id');
                const selectedSize = selectElement.value;

                console.log('🔄 Updating price for product:', productId, 'size:', selectedSize);

                // Get product data from the hidden script tag
                const productDataScript = document.querySelector(`.product-data[data-product-id="${productId}"]`);
                if (!productDataScript) {
                    console.error('❌ Product data not found for:', productId);
                    return;
                }

                const productData = JSON.parse(productDataScript.textContent);
                const { variants, totalOffer } = productData;

                // Find the selected variant
                let selectedVariant = null;
                if (selectedSize && selectedSize !== '') {
                    selectedVariant = variants.find(variant => variant.size === selectedSize);
                }

                // If no size selected, use first variant (sorted)
                if (!selectedVariant && variants.length > 0) {
                    const sortedVariants = variants.sort((a, b) => {
                        const aNum = parseFloat(a.size);
                        const bNum = parseFloat(b.size);
                        if (!isNaN(aNum) && !isNaN(bNum)) {
                            return aNum - bNum;
                        }
                        return a.size.localeCompare(b.size);
                    });
                    selectedVariant = sortedVariants[0];
                }

                if (!selectedVariant) {
                    console.error('❌ No variant found for product:', productId);
                    return;
                }

                // Calculate prices
                const originalPrice = selectedVariant.varientPrice;
                const discountedPrice = totalOffer > 0 ?
                    Math.round(originalPrice - (originalPrice * totalOffer / 100)) :
                    originalPrice;

                // Update price display
                const priceContainer = document.querySelector(`.product-price[data-product-id="${productId}"]`);
                if (priceContainer) {
                    if (totalOffer > 0) {
                        priceContainer.innerHTML = `
                            <span class="current-price">₹${discountedPrice.toLocaleString('en-IN')}</span>
                            <span class="original-price" style="text-decoration: line-through; color: #999; margin-left: 8px; font-size: 16px;">₹${originalPrice.toLocaleString('en-IN')}</span>
                        `;
                    } else {
                        priceContainer.innerHTML = `
                            <span class="current-price">₹${originalPrice.toLocaleString('en-IN')}</span>
                        `;
                    }

                    console.log('✅ Price updated:', {
                        originalPrice,
                        discountedPrice,
                        totalOffer
                    });
                }

            } catch (error) {
                console.error('💥 Error updating wishlist price:', error);
            }
        }

        async function  addToCart(button) {
            try {
                console.log('🔄 AddToCart function called');
                const productCard = button.closest('.product-card');
                const productTitle = productCard.querySelector('.product-title').textContent;
                console.log('📦 Product:', productTitle);

                // Get product ID from the card
                const productId = productCard.getAttribute('data-product-id');
                console.log('🆔 Product ID:', productId);
                if (!productId) {
                    console.error('❌ Product ID not found');
                    showToast('Product ID not found', 'error');
                    return;
                }

                // Get selected size
                const sizeSelect = productCard.querySelector('.size-select');
                const selectedSize = sizeSelect.value;
                console.log('📏 Selected size:', selectedSize);

                // Check if size is selected
                if (!selectedSize) {
                    console.error('❌ No size selected');
                    showToast('Please select a size before adding to cart', 'error');
                    sizeSelect.focus();
                    return;
                }

                // Get product data for price calculation
                const productDataScript = productCard.querySelector('.product-data');
                let variantPrice = null;

                if (productDataScript) {
                    try {
                        const productData = JSON.parse(productDataScript.textContent);
                        const selectedVariant = productData.variants.find(variant => variant.size === selectedSize);
                        if (selectedVariant) {
                            variantPrice = selectedVariant.varientPrice;
                            console.log('💰 Variant price found:', variantPrice);
                        }
                    } catch (error) {
                        console.warn('⚠️ Could not parse product data:', error);
                    }
                }

                // Disable button temporarily
                button.disabled = true;
                const originalHTML = button.innerHTML;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i><span>Moving...</span>';

                console.log('🚀 Sending request to /move-from-wishlist');
                console.log('📤 Request data:', { productId, size: selectedSize, color: 'Default', variantPrice });

                const requestBody = {
                    productId,
                    size: selectedSize,
                    color: 'Default' // You can add color selection later if needed
                };

                // Include variant price if available for backend validation
                if (variantPrice !== null) {
                    requestBody.variantPrice = variantPrice;
                }

                const response = await fetch('/cart/move-from-wishlist', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestBody)
                });

                console.log('📥 Response status:', response.status);
                const data = await response.json();
                console.log('📋 Response data:', data);

                if (data.success) {
                    console.log('✅ Success! Moving product to cart');
                    // Show success message
                    showToast(data.message, 'success');

                    // Update cart counter
                    console.log('🔄 Updating cart counter to:', data.cartCount);
                    if (window.updateCartCounter) {
                        window.updateCartCounter(data.cartCount);
                    } else {
                        console.warn('⚠️ updateCartCounter function not found');
                    }

                    // Remove product card from wishlist with animation
                    console.log('🗑️ Removing product card from wishlist');
                    productCard.style.transition = 'all 0.3s ease';
                    productCard.style.transform = 'translateX(100%)';
                    productCard.style.opacity = '0';

                    setTimeout(() => {
                        productCard.remove();

                        // Update wishlist count
                        if (window.decrementWishlistCounter) {
                            window.decrementWishlistCounter();
                        } else {
                            console.warn('⚠️ decrementWishlistCounter function not found');
                        }

                        // Check if wishlist is empty
                        const remainingCards = document.querySelectorAll('.product-card');
                        if (remainingCards.length === 0) {
                            showEmptyWishlist();
                        }
                    }, 300);

                } else {
                    console.error('❌ Failed to move to cart:', data.message);
                    showToast(data.message || 'Failed to move to cart', 'error');
                    button.innerHTML = originalHTML;
                    button.disabled = false;
                }

            } catch (error) {
                console.error('💥 Error moving to cart:', error);
                console.error('💥 Error details:', error.message, error.stack);
                showToast('Something went wrong. Please try again.', 'error');

                // Reset button
                button.innerHTML = '<i class="fas fa-shopping-cart"></i><span>Add to Cart</span>';
                button.disabled = false;
            }
        }

        function showEmptyWishlist() {
            const mainContent = document.querySelector('.main-content');
            if (mainContent) {
                mainContent.innerHTML = `
                    <div class="empty-wishlist">
                        <div class="empty-icon">
                            <i class="fas fa-heart-broken"></i>
                        </div>
                        <h3>Your wishlist is empty</h3>
                        <p>Start adding products you love to your wishlist!</p>
                        <a href="/shop" class="shop-now-btn">
                            <i class="fas fa-shopping-bag"></i>
                            Shop Now
                        </a>
                    </div>
                `;
            }
        }

        function emptyWishlist() {
            if (confirm('Are you sure you want to empty your entire wishlist?')) {
                const productCards = document.querySelectorAll('.product-card');
                productCards.forEach((card, index) => {
                    setTimeout(() => {
                        card.classList.add('removing');
                        setTimeout(() => card.remove(), 300);
                    }, index * 100);
                });
                
                setTimeout(() => {
                    itemCount = 0;
                    updateItemCount();
                    showEmptyState();
                }, productCards.length * 100 + 300);
            }
        }

        function updateItemCount() {
            const badge = document.querySelector('.item-count-badge');
            badge.textContent = `${itemCount} item${itemCount !== 1 ? 's' : ''}`;
        }

        function showEmptyState() {
            document.getElementById('productsGrid').style.display = 'none';
            document.getElementById('emptyState').classList.add('show');
        }



        // Add hover effects
        document.querySelectorAll('.product-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-8px)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });

        function confirmRemove(productId){
            Swal.fire({

                title:'Are you sure ?',
                text:"You wan't be able to revert this",
                icon:'warning',
                showCancelButton:true,
                confirmButtonColor:'#3085d6',
                cancelButtonColor:'#d33',
                confirmButtonText:'Yes, remove it!'
            }).then((result)=>{
                if(result.isConfirmed){
                    // Update wishlist counter before redirect
                    if (typeof window.decrementWishlistCounter === 'function') {
                        window.decrementWishlistCounter();
                    }
                    window.location.href = `/wishlist/remove?productId=${productId}`
                }
            })
        }

    </script>
</body>
</html>