<style>
    /* CSS Reset and Base Styles */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    html {
        font-size: 16px;
        scroll-behavior: smooth;
    }

    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        min-height: 100dvh; /* Dynamic viewport height for mobile */
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        position: relative;
        overflow-x: hidden;
        line-height: 1.6;
    }

    /* Animated background elements */
    body::before {
        content: '';
        position: fixed;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.08) 1px, transparent 1px);
        background-size: clamp(30px, 5vw, 50px) clamp(30px, 5vw, 50px);
        animation: float 25s infinite linear;
        z-index: 0;
        pointer-events: none;
    }

    @keyframes float {
        0% { transform: translate(-50%, -50%) rotate(0deg); }
        100% { transform: translate(-50%, -50%) rotate(360deg); }
    }

    /* Main content container using CSS Grid for better responsive control */
    .content-main {
        position: relative;
        z-index: 1;
        width: 100%;
        max-width: 28rem; /* 448px */
        margin: 0 auto;
        animation: slideInUp 0.6s ease-out;
        display: grid;
        place-items: center;
        min-height: 0; /* Prevent grid item from growing */
    }

    @keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(2rem);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Card container with improved responsive design */
    .card {
        width: 100%;
        border: none;
        border-radius: clamp(1rem, 3vw, 1.25rem);
        box-shadow: 
            0 1.25rem 3.125rem rgba(0, 0, 0, 0.15),
            0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(0.625rem);
        -webkit-backdrop-filter: blur(0.625rem);
        overflow: hidden;
        position: relative;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card:hover {
        transform: translateY(-0.125rem);
        box-shadow: 
            0 1.5rem 3.75rem rgba(0, 0, 0, 0.2),
            0 0.75rem 1.25rem rgba(0, 0, 0, 0.15);
    }

    /* Animated top border */
    .card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 0.25rem;
        background: linear-gradient(90deg, #667eea, #764ba2, #667eea);
        background-size: 200% 100%;
        animation: shimmer 3s ease-in-out infinite;
    }

    @keyframes shimmer {
        0%, 100% { background-position: 200% 0; }
        50% { background-position: -200% 0; }
    }

    /* Remove unnecessary classes for cleaner responsive design */
    .card-login,
    .mx-auto,
    .col-4 {
        width: 100%;
        margin: 0;
    }

    /* Card body with fluid responsive padding */
    .card-body {
        padding: clamp(1.5rem, 5vw, 3rem) clamp(1.25rem, 4vw, 2.5rem);
        position: relative;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    /* Card title with responsive typography */
    .card-title {
        font-size: clamp(1.5rem, 4vw, 2.25rem);
        font-weight: 700;
        color: #1f2937;
        text-align: center;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        position: relative;
        line-height: 1.2;
        margin-bottom: 0;
    }

    .card-title::after {
        content: 'üîê';
        position: absolute;
        top: -0.5rem;
        right: -0.25rem;
        font-size: clamp(1.25rem, 3vw, 1.5rem);
        animation: bounce 2s infinite;
        filter: drop-shadow(0 0.125rem 0.25rem rgba(0, 0, 0, 0.1));
    }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-0.625rem); }
        60% { transform: translateY(-0.3125rem); }
    }

    /* Form styling with better spacing */
    .mb-3 {
        margin-bottom: 0;
        position: relative;
        width: 100%;
    }

    .mb-4 {
        margin-bottom: 0;
        width: 100%;
    }

    /* Enhanced form control with better mobile UX */
    .form-control {
        display: block;
        width: 100%;
        padding: clamp(0.875rem, 3vw, 1.125rem) clamp(1rem, 3vw, 1.25rem);
        font-size: clamp(0.875rem, 2.5vw, 1rem);
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        border: 0.125rem solid #e5e7eb;
        border-radius: clamp(0.75rem, 2vw, 0.875rem);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        outline: none;
        appearance: none;
        -webkit-appearance: none;
        min-height: 3rem; /* Minimum touch target for mobile */
    }

    .form-control::placeholder {
        color: #9ca3af;
        opacity: 1;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        color: #212529;
        background-color: #fff;
        border-color: #667eea;
        box-shadow: 
            0 0 0 0.1875rem rgba(102, 126, 234, 0.15),
            0 0.25rem 0.5rem rgba(102, 126, 234, 0.1);
        transform: translateY(-0.0625rem);
    }

    .form-control:focus::placeholder {
        opacity: 0.6;
        transform: translateX(0.5rem);
    }

    /* Enhanced button styling with better mobile interaction */
    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        line-height: 1.5;
        text-align: center;
        text-decoration: none;
        vertical-align: middle;
        cursor: pointer;
        user-select: none;
        background-color: transparent;
        border: 0.0625rem solid transparent;
        padding: clamp(0.875rem, 3vw, 1.125rem) clamp(1.25rem, 4vw, 1.5rem);
        font-size: clamp(0.9rem, 2.5vw, 1.1rem);
        border-radius: clamp(0.75rem, 2vw, 0.875rem);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        min-height: 3rem; /* Minimum touch target */
        width: 100%;
    }

    .btn-primary {
        color: #fff;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        box-shadow: 
            0 0.25rem 0.9375rem rgba(102, 126, 234, 0.3),
            0 0.125rem 0.25rem rgba(102, 126, 234, 0.2);
    }

    .btn-primary:hover {
        transform: translateY(-0.125rem);
        box-shadow: 
            0 0.5rem 1.5625rem rgba(102, 126, 234, 0.4),
            0 0.25rem 0.5rem rgba(102, 126, 234, 0.3);
    }

    .btn-primary:active {
        transform: translateY(0);
        transition-duration: 0.1s;
    }

    .btn-primary::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s ease;
    }

    .btn-primary:hover::before {
        left: 100%;
    }

    /* Text styling */
    .text-center {
        text-align: center;
    }

    .text-center p {
        color: #6b7280;
        font-size: clamp(0.875rem, 2.5vw, 0.9375rem);
        margin-bottom: 0;
        line-height: 1.6;
    }

    .text-center p::before {
        content: 'üí°';
        margin-right: 0.5rem;
        opacity: 0.7;
        font-size: 0.875em;
    }

    /* Enhanced link styling */
    a {
        color: #667eea;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        position: relative;
        display: inline-block;
    }

    a::after {
        content: '';
        position: absolute;
        width: 0;
        height: 0.125rem;
        bottom: -0.125rem;
        left: 50%;
        background: linear-gradient(90deg, #667eea, #764ba2);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        transform: translateX(-50%);
        border-radius: 0.0625rem;
    }

    a:hover {
        color: #764ba2;
    }

    a:hover::after {
        width: 100%;
    }

    /* Enhanced error message styling */
    .error-message {
        color: #ef4444;
        font-size: clamp(0.8125rem, 2vw, 0.875rem);
        margin-top: 0.75rem;
        display: block;
        opacity: 0;
        transform: translateY(-0.625rem);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        padding: 0.75rem 1rem;
        background: rgba(239, 68, 68, 0.08);
        border-radius: 0.5rem;
        border-left: 0.1875rem solid #ef4444;
        line-height: 1.5;
        word-wrap: break-word;
    }

    .error-message:not(:empty) {
        opacity: 1;
        transform: translateY(0);
    }

    /* Enhanced invalid input styling */
    .is-invalid {
        border-color: #ef4444 !important;
        box-shadow: 
            0 0 0 0.1875rem rgba(239, 68, 68, 0.15) !important,
            0 0.125rem 0.25rem rgba(239, 68, 68, 0.1) !important;
        animation: shake 0.5s ease-in-out;
    }

    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-0.3125rem); }
        75% { transform: translateX(0.3125rem); }
    }

    /* Loading state with better mobile feedback */
    .btn.loading {
        pointer-events: none;
        opacity: 0.8;
        position: relative;
    }

    .btn.loading::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 1.25rem;
        height: 1.25rem;
        border: 0.125rem solid transparent;
        border-top: 0.125rem solid white;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% { transform: translate(-50%, -50%) rotate(0deg); }
        100% { transform: translate(-50%, -50%) rotate(360deg); }
    }

    /* Comprehensive responsive design with mobile-first approach */
    
    /* Extra small devices (phones, 320px and up) */
    @media (max-width: 374px) {
        body {
            padding: 0.75rem;
        }
        
        .content-main {
            max-width: 100%;
        }
        
        .card-body {
            gap: 1.25rem;
        }
        
        .card-title::after {
            display: none; /* Hide emoji on very small screens */
        }
    }

    /* Small devices (landscape phones, 576px and up) */
    @media (min-width: 576px) {
        body {
            padding: 1.5rem;
        }
        
        .content-main {
            max-width: 32rem; /* 512px */
        }
    }

    /* Medium devices (tablets, 768px and up) */
    @media (min-width: 768px) {
        body {
            padding: 2rem;
        }
        
        .content-main {
            max-width: 28rem; /* Back to 448px for better proportions */
        }
        
        .card-body {
            gap: 2rem;
        }
        
        .form-control:focus {
            transform: translateY(-0.125rem);
        }
        
        .btn-primary:hover {
            transform: translateY(-0.1875rem);
        }
    }

    /* Large devices (desktops, 992px and up) */
    @media (min-width: 992px) {
        .content-main {
            max-width: 30rem; /* 480px */
        }
    }

    /* Extra large devices (large desktops, 1200px and up) */
    @media (min-width: 1200px) {
        .content-main {
            max-width: 28rem; /* 448px - optimal reading width */
        }
    }

    /* Landscape orientation adjustments */
    @media (orientation: landscape) and (max-height: 500px) {
        body {
            align-items: flex-start;
            padding-top: 1rem;
            padding-bottom: 1rem;
        }
        
        .content-main {
            margin: 1rem auto;
        }
        
        .card-body {
            gap: 1rem;
        }
        
        .card-title::after {
            display: none;
        }
    }

    /* High DPI displays */
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .card {
            box-shadow: 
                0 1.25rem 3.125rem rgba(0, 0, 0, 0.12),
                0 0.5rem 1rem rgba(0, 0, 0, 0.08);
        }
    }

    /* Focus management for accessibility */
    .form-control:focus-visible {
        outline: 0.125rem solid #667eea;
        outline-offset: 0.125rem;
    }

    .btn:focus-visible {
        outline: 0.125rem solid #667eea;
        outline-offset: 0.125rem;
    }

    /* High contrast mode support */
    @media (prefers-contrast: high) {
        .card {
            border: 0.125rem solid #000;
            background: #fff;
        }
        
        .form-control {
            border-color: #000;
        }
        
        .btn-primary {
            background: #000;
            border: 0.125rem solid #000;
        }
        
        .card-title {
            color: #000;
            background: none;
            -webkit-text-fill-color: #000;
        }
    }

    /* Reduced motion support */
    @media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
            scroll-behavior: auto !important;
        }
        
        .card-title::after {
            animation: none;
        }
        
        body::before {
            animation: none;
        }
    }

    /* Dark mode support (if needed in future) */
    @media (prefers-color-scheme: dark) {
        /* Styles can be added here for dark mode support */
    }

    /* Print styles */
    @media print {
        body {
            background: white;
            color: black;
        }
        
        .card {
            box-shadow: none;
            border: 0.0625rem solid #000;
        }
        
        body::before {
            display: none;
        }
    }
</style>

<section class="content-main" style="margin-top: 80px; margin-bottom: 80px;">
   <div class="card mx-auto card-login col-4">
       <div class="card-body">
           <h4 class="card-title mb-4">Forgot Password</h4>
           <% if (typeof message !== 'undefined' && message) { %>
               <div class="error-message" style="opacity: 1; transform: translateY(0); margin-bottom: 1rem;">
                   <%= message %>
               </div>
           <% } %>
           <form method="post" action="/forgot-email-valid" onsubmit="return validateLoginForm()">
               <div class="mb-3">
                   <input class="form-control" name="email" placeholder="Enter your email address" type="email" id="email">
                   <div class="error-message" id="email-error"></div>
               </div>
               <div class="mb-4">
                   <button type="submit" class="btn btn-primary w-100">Send Verification Code</button>
               </div>
           </form>
         
           <p class="text-center mb-4">Don't have an account? <a href="/signup">Sign up</a></p>
       </div>
   </div>
</section>

<script>
   function validateLoginForm() {
       const emailInput = document.getElementById('email');
       const emailError = document.getElementById('email-error');
       const emailValue = emailInput.value.trim();
       const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

       // Clear previous error states
       emailError.textContent = '';
       emailInput.classList.remove('is-invalid');

       if (emailValue === '') {
           emailError.textContent = 'Please enter your email address.';
           emailInput.classList.add('is-invalid');
           emailInput.focus();
           return false;
       } else if (!emailValue.match(emailPattern)) {
           emailError.textContent = 'Please enter a valid email address.';
           emailInput.classList.add('is-invalid');
           emailInput.focus();
           return false;
       } else {
           // Show loading state
           const submitBtn = document.querySelector('.btn-primary');
           submitBtn.classList.add('loading');
           submitBtn.textContent = 'Sending...';
           
           return true;
       }
   }

   // Real-time validation
   document.getElementById('email').addEventListener('input', function() {
       const emailError = document.getElementById('email-error');
       if (emailError.textContent) {
           emailError.textContent = '';
           this.classList.remove('is-invalid');
       }
   });

   // Prevent multiple submissions
   document.querySelector('form').addEventListener('submit', function() {
       const submitBtn = document.querySelector('.btn-primary');
       setTimeout(() => {
           submitBtn.style.pointerEvents = 'none';
       }, 100);
   });
</script>