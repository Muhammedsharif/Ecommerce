<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile - 1NOTONE</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }

        .container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 2rem;
        }

        .edit-profile-card {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        }

        .headerback {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #e9ecef;
        }

        .header h1 {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-size: 2rem;
            font-weight: bold;
        }

        .back-btn {
            background: #6c757d;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            cursor: pointer;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: background 0.3s ease;
        }

        .back-btn:hover {
            background: #5a6268;
            color: white;
            text-decoration: none;
        }

        .profile-image-section {
            text-align: center;
            margin-bottom: 2rem;
            padding: 2rem;
            background: #f8f9fa;
            border-radius: 12px;
        }

        .profile-image-container {
            position: relative;
            display: inline-block;
            margin-bottom: 1rem;
        }

        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #667eea;
        }

        .profile-avatar {
            width: 120px;
            height: 120px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 3rem;
            font-weight: bold;
        }

        .image-upload-btn {
            position: absolute;
            bottom: 0;
            right: 0;
            background: #667eea;
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background 0.3s ease;
        }

        .image-upload-btn:hover {
            background: #5a67d8;
        }

        .form-section {
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #495057;
        }

        .form-input {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
        }

        .email-section {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .email-warning {
            color: #856404;
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
        }

        .btn {
            padding: 0.75rem 2rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
        }

        .error-message {
            color: #dc3545;
            font-size: 0.9rem;
            margin-top: 0.25rem;
        }

        .success-message {
            color: #28a745;
            font-size: 0.9rem;
            margin-top: 0.25rem;
        }

        /* Toast Notification Styles */
        .toast-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #28a745;
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            z-index: 10000;
            transform: translateX(100%);
            transition: transform 0.3s ease;
            font-weight: 500;
            min-width: 300px;
        }

        .toast-notification.toast-error {
            background: #dc3545;
        }

        .toast-notification.show {
            transform: translateX(0);
        }

        .toast-content {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        @media (max-width: 768px) {
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .container {
                padding: 0 1rem;
            }
        }
    </style>
</head>
<body>
    <%- include("../partials/user/header") %>

    <!-- Breadcrumb Navigation -->
    <%- include("../partials/user/breadcrumb", {
        breadcrumbs: [
            { name: "My Account", url: "/profile" },
            { name: "Edit Profile", url: "/profile/edit" }
        ]
    }) %>

    <div class="container">
        <div class="edit-profile-card">
            <div class="headerback">
                <h1><i class="fas fa-user-edit"></i> Edit Profile</h1>
                <a href="/profile" class="back-btn">
                    <i class="fas fa-arrow-left"></i>
                    Back to Profile
                </a>
            </div>

            <form id="editProfileForm" action="/profile/edit" method="POST" enctype="multipart/form-data">
                <!-- Profile Image Section -->
                <div class="profile-image-section">
                    <div class="profile-image-container">
                        <% if (user.profileImage) { %>
                            <img src="/uploads/profile-images/<%= user.profileImage %>" alt="Profile" class="profile-image" id="profileImagePreview">
                        <% } else { %>
                            <div class="profile-avatar" id="profileAvatar">
                                <%= user.name.charAt(0).toUpperCase() %>
                            </div>
                        <% } %>
                        <button type="button" class="image-upload-btn" onclick="document.getElementById('profileImageInput').click()">
                            <i class="fas fa-camera"></i>
                        </button>
                    </div>
                    <input type="file" id="profileImageInput" name="profileImage" accept="image/*" style="display: none;" onchange="previewImage(this)">
                    <p style="color: #6c757d; font-size: 0.9rem;">Click the camera icon to change your profile picture</p>
                </div>

                <!-- Personal Information Section -->
                <div class="form-section">
                    <h3 class="section-title">
                        <i class="fas fa-user"></i>
                        Personal Information
                    </h3>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Full Name *</label>
                            <input type="text" name="name" id="nameInput" class="form-input" value="<%= user.name %>" required>
                            <div id="nameError" class="error-message" style="display: none;"></div>
                            <% if (errors && errors.name) { %>
                                <div class="error-message"><%= errors.name %></div>
                            <% } %>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Phone Number</label>
                            <input type="tel" name="phone" class="form-input" value="<%= user.phone || '' %>">
                            <% if (errors && errors.phone) { %>
                                <div class="error-message"><%= errors.phone %></div>
                            <% } %>
                        </div>
                    </div>
                </div>

                <!-- Email Section -->
                <div class="form-section">
                    <h3 class="section-title">
                        <i class="fas fa-envelope"></i>
                        Email Address
                    </h3>

                    <div class="form-group">
                        <label class="form-label">Current Email</label>
                        <div class="current-email-display" style="background: #f8f9fa; padding: 0.75rem; border-radius: 8px; border: 1px solid #e9ecef; color: #6c757d;">
                            <i class="fas fa-envelope"></i>
                            <%= user.email %>
                            <span style="font-size: 0.85rem; color: #6c757d; margin-left: 1rem;">
                                (To change email, use Account Security section)
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="action-buttons">
                    <a href="/profile" class="btn btn-secondary">
                        <i class="fas fa-times"></i>
                        Cancel
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i>
                        Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // File validation constants
        const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB in bytes
        const ALLOWED_TYPES = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];

        function validateFile(file) {
            // Check file size
            if (file.size > MAX_FILE_SIZE) {
                return {
                    valid: false,
                    error: 'File size too large. Please select an image smaller than 5MB.'
                };
            }

            // Check file type
            if (!ALLOWED_TYPES.includes(file.type)) {
                return {
                    valid: false,
                    error: 'Invalid file type. Please select a valid image file (JPEG, PNG, GIF, or WebP).'
                };
            }

            return { valid: true };
        }

        function previewImage(input) {
            if (input.files && input.files[0]) {
                const file = input.files[0];
                
                // Validate file before preview
                const validation = validateFile(file);
                if (!validation.valid) {
                    // Show error with SweetAlert
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid File',
                        text: validation.error,
                        confirmButtonColor: '#667eea'
                    });
                    
                    // Clear the input
                    input.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const preview = document.getElementById('profileImagePreview');
                    const avatar = document.getElementById('profileAvatar');
                    
                    if (preview) {
                        preview.src = e.target.result;
                    } else if (avatar) {
                        // Replace avatar with image
                        avatar.outerHTML = `<img src="${e.target.result}" alt="Profile" class="profile-image" id="profileImagePreview">`;
                    }
                }
                reader.readAsDataURL(file);
            }
        }

        // Enhanced form submission with file validation
        document.getElementById('editProfileForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const fileInput = document.getElementById('profileImageInput');
            const file = fileInput.files[0];
            
            // If a file is selected, validate it
            if (file) {
                const validation = validateFile(file);
                if (!validation.valid) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid File',
                        text: validation.error,
                        confirmButtonColor: '#667eea'
                    });
                    return;
                }
            }

            // Show loading
            Swal.fire({
                title: 'Updating Profile...',
                text: 'Please wait while we update your profile.',
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            // Submit form using FormData for file upload
            const formData = new FormData(this);
            
            fetch('/profile/edit', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    return response.json().catch(() => {
                        // If response is not JSON (redirect), handle as success
                        window.location.href = '/Profile?success=' + encodeURIComponent('Profile updated successfully');
                        return null;
                    });
                } else {
                    return response.json();
                }
            })
            .then(data => {
                if (data) {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: data.message || 'Profile updated successfully',
                            confirmButtonColor: '#667eea'
                        }).then(() => {
                            if (data.redirectUrl) {
                                window.location.href = data.redirectUrl;
                            } else {
                                window.location.href = '/Profile?success=' + encodeURIComponent('Profile updated successfully');
                            }
                        });
                    } else {
                        let errorMessage = 'An error occurred while updating your profile.';
                        
                        if (data.errorType === 'FILE_SIZE_LIMIT') {
                            errorMessage = 'File size too large. Please select an image smaller than 5MB.';
                        } else if (data.errorType === 'INVALID_FILE_TYPE') {
                            errorMessage = 'Invalid file type. Please select a valid image file.';
                        } else if (data.error) {
                            errorMessage = data.error;
                        }
                        
                        Swal.fire({
                            icon: 'error',
                            title: 'Upload Failed',
                            text: errorMessage,
                            confirmButtonColor: '#667eea'
                        });
                    }
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An unexpected error occurred. Please try again.',
                    confirmButtonColor: '#667eea'
                });
            });
        });

        // Toast notification function (kept for backward compatibility)
        function showToast(message, type = 'success') {
            const existingToasts = document.querySelectorAll('.toast-notification');
            existingToasts.forEach(toast => toast.remove());

            const toast = document.createElement('div');
            toast.className = `toast-notification toast-${type}`;
            toast.innerHTML = `
                <div class="toast-content">
                    <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                    <span>${message}</span>
                </div>
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                toast.classList.add('show');
            }, 100);

            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.parentNode.removeChild(toast);
                    }
                }, 300);
            }, 3000);
        }

        // Show messages if any (fallback for server-side messages)
        <% if (typeof success !== 'undefined' && success) { %>
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: '<%= success %>',
                confirmButtonColor: '#667eea'
            });
        <% } %>
        
        <% if (typeof error !== 'undefined' && error) { %>
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: '<%= error %>',
                confirmButtonColor: '#667eea'
            });
        <% } %>

        // Add file size info to the UI
        document.addEventListener('DOMContentLoaded', function() {
            const fileInfo = document.createElement('p');
            fileInfo.style.cssText = 'color: #6c757d; font-size: 0.8rem; margin-top: 0.5rem;';
            fileInfo.textContent = 'Maximum file size: 5MB. Supported formats: JPEG, PNG, GIF, WebP';
            
            const profileSection = document.querySelector('.profile-image-section');
            profileSection.appendChild(fileInfo);
        });
    </script>
    <script src="/js/profile-validation.js"></script>
</body>
</html>