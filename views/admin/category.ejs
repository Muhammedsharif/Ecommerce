<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Categories Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/styles/admin/category.css">
    <style>
        .btn-delete {
            background: #ef4444;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
        }
        .btn-delete:hover {
            background: #dc2626;
            color: white;
            text-decoration: none;
        }
        .action-buttons-container {
            display: flex;
            gap: 8px;
        }
    </style>
</head>
<body>
     <%- include("../partials/admin/header") %>
     <nav class="breadcrumb-nav" aria-label="breadcrumb" style="margin-bottom: 20px;">
        <ol class="breadcrumb" style="display: flex; list-style: none; padding: 0; font-size: 14px;">
            <li class="breadcrumb-item">
                <a href="/admin/dashboard" style="text-decoration: none; color: #007bff;">
                    <i class="fas fa-home"></i> Dashboard
                </a>
            </li>
            <li class="breadcrumb-separator" style="margin: 0 5px;">/</li>
            <li class="breadcrumb-separator" style="margin: 0 5px;">/</li>
            <li class="breadcrumb-item active" style="color: #6c757d;">
                 Category
            </li>
        </ol>
    </nav>
    <div class="container">
        <!-- Header Section -->
        <div class="header">
            <div class="header-content">
                <div class="header-left">
                    <h1>Categories Management</h1>
                    <p>Manage your content categories with ease</p>
                </div>
                <button class="btn-add" onclick="showAddModal()">
                    <i class="fas fa-plus"></i>
                    Add New Category
                </button>
            </div>
            
        </div>
        
            <!-- Search Section -->
            <div class="search-container">
                <form action="/admin/category/" method="get" class="search-wrapper">
                    <input type="text" class="search-input" placeholder="Search categories..." name="search" value="<%=search%>">
                    <button type="submit" class="search-btn">
                        <i class="fas fa-search"></i>
                    </button>
                </form>
            </div>

        <!-- Main Content -->
        <div class="main-card">
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Category Name</th>
                            <th>Description</th>
                            <th>Offer Price</th>
                            <th>Offer Actions</th>
                            <th>Status</th>
                            <th>List/Unlist</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                      
                        <!-- Add more sample rows or replace with your EJS loop -->
                        <%cat.reverse().forEach((category,index)=>{ %>
                        <tr>
                            <td>
                                <div class="category-name"><%=category.name%></div>
                            </td>
                            <td>
                                <div class="category-description"><%=category.description%></div>
                            </td>
                            <td>
                                <span style="color: #64748b;">₹0</span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="#" class="btn btn-offer">
                                        <i class="fas fa-tag"></i>
                                        Add Offer
                                    </a>
                                    <a href="#" class="btn btn-remove">
                                        <i class="fas fa-times"></i>
                                        Remove
                                    </a>
                                </div>
                            </td>
                            <td>
                                <%if(category.isListed){%>
                                <span class="status-badge status-listed">
                                    <i class="fas fa-check-circle"></i>
                                    Listed
                                </span>
                                <%}else{%>
                                <span class="status-badge status-listed">
                                    <i class="fas fa-check-circle"></i>
                                    UnListed
                                </span>
                                <%}%>

                            </td>
                            <td>
                                <%if(category.isListed){%>
                                <div class="action-buttons">
                                    <a href="/admin/listCategory?id=<%=category._id%>" class="btn btn-unlist">
                                        <i class="fas fa-eye-slash"></i>
                                        Unlist
                                    </a>
                                    <%}else{%>
                                    <a href="/admin/unlistCategory?id=<%=category._id%>" class="btn btn-list">
                                        <i class="fas fa-eye"></i>
                                        List
                                    </a>
                                    <%}%>
                                </div>
                            </td>
                            <td>
                                <div class="action-buttons-container">
                                    <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-edit">
                                        <i class="fas fa-edit"></i>
                                        Edit
                                    </a>
                                    <button onclick="deleteCategory('<%=category._id%>', '<%=category.name%>')" class="btn-delete">
                                        <i class="fas fa-trash"></i>
                                        Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <%})%>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="pagination">
               
                
               
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <% if (i === currentPage) { %>
                        <span class="current-page"><%= i %></span>
                    <% } else { %>
                        <a href="?page=<%= i %>"><%= i %></a>
                    <% } %>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
                <% } %>
               
            </div>
        </div>
    </div>

    <!-- Add Category Modal -->
    <div id="addModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Add New Category</h2>
                <button class="close" onclick="closeAddModal()">&times;</button>
            </div>
            <form onsubmit="handleFormSubmit(event)">
                <div class="form-group">
                    <label for="categoryName" class="form-label">Category Name</label>
                    <input type="text" id="categoryName" name="name" class="form-control" placeholder="Enter category name">
                    <div id="name-error" class="error-message"></div>
                </div>
                <div class="form-group">
                    <label for="categoryDescription" class="form-label">Description</label>
                    <textarea id="descriptionId" name="description" class="form-control" rows="4" placeholder="Enter category description"></textarea>
                    <div id="description-error" class="error-message"></div>
                </div>
                <button type="submit" class="btn-submit">
                    <i class="fas fa-plus"></i>
                    Add Category
                </button>
            </form>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <script>
        // Modal functions
        function showAddModal() {
            const modal = document.getElementById('addModal');
            modal.style.display = 'block';
            setTimeout(() => {
                modal.classList.add('show');
            }, 10);
        }

        function closeAddModal() {
            const modal = document.getElementById('addModal');
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
            clearForm();
        }

        function clearForm() {
            document.getElementById('categoryName').value = '';
            document.getElementById('descriptionId').value = '';
            clearErrorMessages();
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('addModal');
            if (event.target === modal) {
                closeAddModal();
            }
        }

        // Delete Category Function
        function deleteCategory(categoryId, categoryName) {
            Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to delete the category "${categoryName}"? This action cannot be undone!`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/deleteCategory`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ id: categoryId })
                    })
                    .then(response => {
                        console.log('Response status:', response.status);
                        console.log('Response headers:', response.headers);
                        
                        // Check if response is actually JSON
                        const contentType = response.headers.get('content-type');
                        if (!contentType || !contentType.includes('application/json')) {
                            throw new Error('Server returned non-JSON response');
                        }
                        
                        if (!response.ok) {
                            return response.text().then(text => {
                                console.log('Error response:', text);
                                throw new Error('Failed to delete category');
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: data.message || 'Category has been deleted successfully.',
                            confirmButtonColor: '#667eea'
                        }).then(() => {
                            location.reload();
                        });
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: error.message || 'An error occurred while deleting the category.',
                            confirmButtonColor: '#ef4444'
                        });
                    });
                }
            });
        }

        // Form submission
        function handleFormSubmit(event) {
            event.preventDefault();
            console.log("Form submitted 👌");
            
            if (!validateForm()) {
                console.log("Form not valid ❌");
                return;
            }
            
            const name = document.getElementsByName("name")[0].value.trim();
            const description = document.getElementById("descriptionId").value.trim();
            
            fetch("/admin/addCategory", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name, description })
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => {
                        throw new Error(data.message);
                    });
                }
                return response.json();
            })
            .then(data => {
                Swal.fire({
                    icon: "success",
                    title: "Success!",
                    text: data.message,
                    confirmButtonText: "OK",
                    confirmButtonColor: "#667eea"
                }).then(() => {
                    closeAddModal();
                    location.reload();
                });
            })
            .catch(error => {
                if (error.message === 'Category already exists') {
                    Swal.fire({
                        icon: "error",
                        title: "Oops!",
                        text: "Category already exists",
                        confirmButtonColor: "#ef4444"
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Oops!",
                        text: "An error occurred while adding the category",
                        confirmButtonColor: "#ef4444"
                    });
                }
            });
        }

        // Form validation
        function validateForm() {
            console.log("Validation started ✅");
            clearErrorMessages();
            
            const name = document.getElementsByName("name")[0].value.trim();
            const description = document.getElementById("descriptionId").value.trim();
            let isValid = true;

            if (name === "") {
                displayErrorMessage("name-error", "Please enter a category name");
                document.getElementById("categoryName").classList.add("error");
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                displayErrorMessage("name-error", "Name should only contain letters and spaces");
                document.getElementById("categoryName").classList.add("error");
                isValid = false;
            } else {
                document.getElementById("categoryName").classList.remove("error");
            }

            if (description === "") {
                displayErrorMessage("description-error", "Please enter a description");
                document.getElementById("descriptionId").classList.add("error");
                isValid = false;
            } else {
                document.getElementById("descriptionId").classList.remove("error");
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName("error-message");
            Array.from(errorElements).forEach((element) => {
                element.innerText = "";
                element.style.display = "none";
            });
            
            // Remove error classes from form controls
            document.querySelectorAll('.form-control').forEach(control => {
                control.classList.remove('error');
            });
        }

        </script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</body>
</html>