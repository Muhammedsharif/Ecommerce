<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>1NOTONE - Premium Footwear Collection</title>
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Playfair+Display:wght@700&display=swap"
        rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: #ffffff;
            color: #333;
            overflow-x: hidden;
        }

        .hero-section {
            position: relative;
            overflow: hidden;
            min-height: 100vh;
        }

        .hero-content {
            text-align: center;
            z-index: 2;
            max-width: 800px;
            padding: 0 20px;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
        }

        .hero-title {
            font-size: 4rem;
            font-weight: bold;
            margin-bottom: 20px;
            background: linear-gradient(45deg, #333, #4ecdc4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: fadeInUp 1s ease;
        }

        .hero-subtitle {
            font-size: 1.2rem;
            margin-bottom: 40px;
            color: #666;
            animation: fadeInUp 1s ease 0.2s both;
        }

        .hero-btn {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            border: none;
            padding: 18px 40px;
            font-size: 1.1rem;
            font-weight: bold;
            color: white;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            animation: fadeInUp 1s ease 0.4s both;
        }

        .hero-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 40px rgba(255, 107, 107, 0.4);
        }

        .floating-elements {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

        .floating-elements img {
            width: 100%;
            height: 100%;
            object-fit: revert-layer;
        }

        .floating-element {
            position: absolute;
            background: rgba(76, 205, 196, 0.1);
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        .floating-element:nth-child(1) {
            width: 80px;
            height: 80px;
            top: 20%;
            left: 10%;
            animation-delay: 0s;
        }

        .floating-element:nth-child(2) {
            width: 120px;
            height: 120px;
            top: 60%;
            right: 15%;
            animation-delay: 2s;
        }

        .floating-element:nth-child(3) {
            width: 60px;
            height: 60px;
            bottom: 20%;
            left: 20%;
            animation-delay: 4s;
        }

        .products-section {
            background: #f8f9fa;
            position: relative;
            z-index: 1;
            display: flex;
            min-height: calc(100vh - 80px);
        }

        .filter-sidebar {
            position: sticky;
            top: 120px;
            left: 0;
            width: 300px;
            height: fit-content;
            max-height: calc(100vh - 140px);
            background: #ffffff;
            padding: 30px 20px;
            border-right: 1px solid #e9ecef;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
            z-index: 1000;
            flex-shrink: 0;
        }

        .filter-title {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 30px;
            color: #333;
            text-align: center;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .filter-group {
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid #f0f0f0;
        }

        .filter-group:last-child {
            border-bottom: none;
        }

        .filter-group label {
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
            display: block;
            font-size: 0.95rem;
        }

        .filter-group select,
        .filter-group input[type="number"] {
            width: 100%;
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .filter-group select:focus,
        .filter-group input[type="number"]:focus {
            border-color: #4ecdc4;
            outline: none;
            background: #ffffff;
            box-shadow: 0 0 0 3px rgba(76, 205, 196, 0.1);
        }

        .price-inputs {
            display: flex;
            gap: 10px;
        }

        .price-inputs input {
            flex: 1;
        }

        .filter-btn {
            width: 100%;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            border: none;
            padding: 15px 20px;
            border-radius: 12px;
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1rem;
            margin-top: 20px;
        }

        .filter-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 107, 107, 0.3);
        }

        .clear-filters {
            width: 100%;
            background: transparent;
            border: 2px solid #e9ecef;
            padding: 12px 20px;
            border-radius: 12px;
            color: #666;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.95rem;
            margin-top: 10px;
        }

        .clear-filters:hover {
            border-color: #ff6b6b;
            color: #ff6b6b;
        }

        .filter-toggle {
            display: none;
            position: fixed;
            top: 90px;
            left: 20px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            border: none;
            padding: 12px 15px;
            border-radius: 50%;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            z-index: 1001;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .main-content {
            flex: 1;
            padding: 40px 30px;
            background: #f8f9fa;
            min-height: 100%;
        }

        .section-title {
            text-align: center;
            font-size: 3rem;
            margin-bottom: 30px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .products-toolbar {
            display: flex;
            align-items: center;
            background-color: #1f2937;
            border-radius: 12px;
            padding: 10px 15px;
            gap: 15px;
            margin-bottom: 20px;
        }

        .products-count {
            color: #93c5fd;
            font-size: 18px;
            white-space: nowrap;
        }

        .search-bar {
            flex: 1;
        }

        .search-input-wrapper {
            display: flex;
            align-items: center;
            background-color: #374151;
            border-radius: 999px;
            padding-left: 15px;
            padding-right: 5px;
            width: 100%;
            height: 42px;
        }

        #product-search {
            flex: 1;
            background: transparent;
            border: none;
            outline: none;
            color: #fff;
            font-size: 16px;
            padding: 10px 0;
            margin-right: 10px;
        }

        .search-btn {
            background: transparent;
            border: none;
            color: #87cefa;
            font-size: 18px;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: background 0.2s ease;
        }

        .search-btn:hover {
            background: rgba(255, 255, 255, 0.1);
        }

        .clear-search-btn {
            background: transparent;
            border: 2px solid #87cefa;
            color: #87cefa;
            font-size: 14px;
            cursor: pointer;
            padding: 6px 12px;
            border-radius: 20px;
            transition: all 0.2s ease;
            margin-left: 10px;
        }

        .clear-search-btn:hover {
            background: #87cefa;
            color: #fff;
        }

        .filter-dropdown select {
            padding: 8px 20px;
            border: none;
            border-radius: 20px;
            background: #34495e;
            color: #bdc3c7;
            font-size: 0.9rem;
            cursor: pointer;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%23bdc3c7' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 10px center;
        }

        .filter-dropdown select:focus {
            outline: none;
            box-shadow: 0 0 5px rgba(169, 201, 255, 0.5);
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(3, minmax(0, 1fr));
            gap: 30px;
            margin-bottom: 60px;
        }

        .product-card {
            background: #ffffff;
            border-radius: 20px;
            padding: 30px;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid #e9ecef;
            z-index: 2;
        }

        .product-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
            z-index: 3;
            transform-origin: center center;
        }

        .product-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(76, 205, 196, 0.1), transparent);
            transition: left 0.6s ease;
        }

        .product-card:hover::before {
            left: 100%;
        }

        .product-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 20px;
        }

        .wishlist-btn {
            background: none;
            border: none;
            font-size: 24px;
            color: #ccc;
            cursor: pointer;
        }

        .wishlist-btn.active {
            color: red;
        }

        .product-image {
            width: 100%;
            height: 200px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1);
            border-radius: 15px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            position: relative;
            overflow: hidden;
            transition: transform 0.3s ease;
        }

        .product-name a {
            text-decoration: none !important;
            color: inherit;
        }

        .product-name a:hover {
            color: #ff3e3e !important;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 15px;
        }

        .product-card:hover .product-image {
            transform: scale(1.05);
        }

        .product-name {
            font-size: 1.4rem;
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
        }

        .product-price {
            font-size: 1.2rem;
            font-weight: bold;
            color: #ff3e3e;
            margin-bottom: 15px;
        }

        .product-price span {
            font-size: 0.95rem;
            font-weight: normal;
            color: #b0b0b0;
            margin-left: 10px;
        }

        .product-price span strike {
            text-decoration: line-through;
        }

        .product-rating {
            display: flex;
            gap: 5px;
            margin-bottom: 20px;
        }

        .star {
            color: #ffd700;
            font-size: 1.2rem;
        }

        .add-to-cart {
            width: 100%;
            background: linear-gradient(45deg, #000000, #434343);
            border: none;
            padding: 15px;
            border-radius: 10px;
            color: #ffffff;
            font-weight: bold;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            letter-spacing: 0.5px;
        }

        .add-to-cart:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.4);
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 8px;
            margin: 40px 0;
            flex-wrap: wrap;
        }

        .pagination .page-link {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            min-width: 45px;
            height: 45px;
            padding: 12px 16px;
            background: white;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            position: relative;
            cursor: pointer;
        }

        .pagination .page-link:hover {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border-color: #667eea;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .pagination .page-link.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-color: #667eea;
            color: white;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

       .toast {
    position: fixed;
    top: 80px;
    right: 20px;
    background: #fff;
    border-left: 5px solid #28a745;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    padding: 12px 20px;
    min-width: 280px;
    z-index: 9999;
    transform: translateX(100%);
    transition: transform 0.3s ease, opacity 0.3s ease;
    opacity: 0;
}

.toast.visible {
    transform: translateX(0);
    opacity: 1;
}

.toast.hidden {
    transform: translateX(100%);
    opacity: 0;
}

.toast-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

.toast .icon {
    margin-right: 12px;
    color: #28a745;
    font-size: 18px;
}

.toast .close-btn {
    border: none;
    background: none;
    font-size: 18px;
    cursor: pointer;
    color: #666;
}

        .features-section {
            padding: 100px 50px;
            background: #ffffff;
            position: relative;
            z-index: 1;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 40px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .feature-card {
            text-align: center;
            padding: 40px 20px;
            background: #f8f9fa;
            border-radius: 20px;
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
            position: relative;
            z-index: 2;
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            transform-origin: center center;
            z-index: 3;
        }

        .feature-icon {
            font-size: 3rem;
            margin-bottom: 20px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .feature-title {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 15px;
            color: #333;
        }

        .feature-description {
            color: #666;
            line-height: 1.6;
        }

        .notification {
            position: fixed;
            top: 100px;
            right: 20px;
            background: linear-gradient(45deg, #4ecdc4, #45b7d1);
            color: white;
            padding: 15px 25px;
            border-radius: 10px;
            font-weight: bold;
            z-index: 9998;
            transform: translateX(400px);
            transition: transform 0.3s ease;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes float {

            0%,
            100% {
                transform: translateY(0px);
            }

            50% {
                transform: translateY(-20px);
            }
        }

        @media (max-width: 1024px) {
            .products-grid {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }

            .filter-sidebar {
                width: 280px;
            }
        }

        @media (max-width: 768px) {
            .hero-title {
                font-size: 2.5rem;
            }

            .products-section {
                flex-direction: column;
            }

            .filter-sidebar {
                transform: translateX(-100%);
                width: 280px;
                position: fixed;
                top: 100px;
                left: 0;
                height: calc(100vh - 100px);
                z-index: 1001;
            }

            .filter-sidebar.open {
                transform: translateX(0);
            }

            .filter-toggle {
                display: block;
            }

            .main-content {
                padding: 20px;
            }

            .products-grid {
                grid-template-columns: 1fr;
            }

            .section-title {
                font-size: 2rem;
            }

            .pagination {
                gap: 5px;
                margin: 40px 0;
            }

            .pagination .page-link {
                min-width: 40px;
                height: 40px;
                font-size: 0.9rem;
            }
        }

        @media (max-width: 480px) {
            .filter-sidebar {
                width: 100%;
            }

            .pagination .page-link {
                min-width: 35px;
                height: 35px;
                padding: 0 10px;
                font-size: 0.85rem;
            }
        }
    </style>
</head>

<body>
    <%- include("../partials/user/header") %>

    <!-- Breadcrumb Navigation -->
    <%- include("../partials/user/breadcrumb", { breadcrumbs: [{ name: "Shop", url: "/shop" }] }) %>

        <section class="hero-section" id="home">
            <div class="floating-elements">
                <img src="/images/close-up-futuristic-sneakers-showcase_23-2151005675.avif" alt="">
            </div>
            <!-- <div class="hero-content">
            <h1 class="hero-title">Step Into Style</h1>
            <p class="hero-subtitle">Discover premium sneakers that blend comfort, performance, and cutting-edge
                design</p>
            <button class="hero-btn"
                onclick="document.getElementById('products').scrollIntoView({behavior: 'smooth'})">
                Shop Collection
            </button>
        </div> -->
        </section>

        <section class="products-section" id="products">
            <button class="filter-toggle" onclick="toggleFilter()">☰</button>

            <div class="filter-sidebar" id="filterSidebar">
                <h3 class="filter-title">Filter Products</h3>
                <form id="filterForm">
                    <div class="filter-group">
                        <label for="categoryDropdown">Category</label>
                        <select id="categoryDropdown" name="category">
                            <option value="">All Categories</option>
                            <% for(let i=0; i < categories.length; i++) { %>
                                <option value="<%= categories[i]._id %>" <%=selectedCategory==categories[i]._id
                                    ? 'selected' : '' %>>
                                    <%= categories[i].name %>
                                </option>
                                <% } %>
                        </select>
                    </div>

                    <!-- Add Sort By dropdown here -->
                    <div class="filter-group">
                        <label for="sort">Sort By</label>
                        <select id="sort" name="sort" class="">
                            <option value="default" <%=locals.query && query.sort==='default' ? 'selected' : '' %>
                                >Featured</option>
                            <option value="price_asc" <%=locals.query && query.sort==='price_asc' ? 'selected' : '' %>
                                >Price: Low to High</option>
                            <option value="price_desc" <%=locals.query && query.sort==='price_desc' ? 'selected' : '' %>
                                >Price: High to Low</option>
                            <option value="name_asc" <%=locals.query && query.sort==='name_asc' ? 'selected' : '' %>
                                >Name: A to Z</option>
                            <option value="name_desc" <%=locals.query && query.sort==='name_desc' ? 'selected' : '' %>
                                >Name: Z to A</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <label>Price Range (₹)</label>
                        <div class="price-inputs">
                            <input type="number" id="min-price" name="minPrice" min="0" placeholder="Min"
                                value="<%= minPrice || '' %>">
                            <input type="number" id="max-price" name="maxPrice" min="0" placeholder="Max"
                                value="<%= maxPrice || '' %>">
                        </div>
                    </div>

                    <!-- <div class="filter-group">
                    <label for="rating">Minimum Rating</label>
                    <select id="rating" name="rating">
                        <option value="0" <%=rating==0 ? 'selected' : '' %>>Any Rating</option>
                        <option value="3" <%=rating==3 ? 'selected' : '' %>>3+ Stars</option>
                        <option value="4" <%=rating==4 ? 'selected' : '' %>>4+ Stars</option>
                        <option value="5" <%=rating==5 ? 'selected' : '' %>>5 Stars Only</option>
                    </select>
                </div> -->

                    <button type="submit" class="filter-btn">Apply Filters</button>
                    <button type="button" class="clear-filters" onclick="clearFilters()">Clear All</button>
                </form>
            </div>

            <div class="main-content">
                <h2 class="section-title">Featured Products</h2>
                <div class="products-toolbar">
                    <div class="products-count">
                        <strong>Products (<%= products.length %>)</strong>
                    </div>

                    <div class="search-bar">
                        <form id="searchForm">
                            <div class="search-input-wrapper">
                                <input type="text" name="search" placeholder="Search products..." id="product-search" />
                                <button type="submit" class="search-btn">🔍</button>
                                <button type="button" id="clearSearch" class="clear-search-btn">Clear</button>
                            </div>
                        </form>
                    </div>

                    <div class="filter-dropdown">
                        <select id="new-arrivals">
                            <option value="">New Arrivals</option>
                            <option value="latest">Latest</option>
                            <option value="popular">Popular</option>
                        </select>
                    </div>
                </div>

                <div class="products-grid">
                    <% for(let i=0; i < products.length; i++) { %>
                        <div class="product-card">
                            <div class="product-header">
                                <button
                                    class="wishlist-btn <%= userWishlist.includes(products[i]._id.toString()) ? 'active' : '' %>"
                                    onclick="addToWishlist('<%=products[i]._id%>')">♡</button>



                            </div>
                            <div class="product-image">
                                <a href="/productDetails?id=<%= products[i]._id %>">
                                    <img src="/Uploads/product-images/<%= products[i].productImage[0] %>"
                                        alt="<%= products[i].productName %>">
                                </a>
                            </div>
                            <h3 class="product-name">
                                <a href="/productDetails?id=<%= products[i]._id %>">
                                    <%= products[i].productName %>
                                </a>
                            </h3>
                            <%
                                // Calculate display price based on variants or product level
                                let displayPrice = products[i].salePrice || products[i].regularPrice;
                                let originalPrice = products[i].regularPrice;
                                let hasDiscount = false;

                                // If product has variants, use the first variant's price as default
                                if (products[i].variant && products[i].variant.length > 0) {
                                    const defaultVariant = products[i].variant[0];
                                    displayPrice = defaultVariant.salePrice || defaultVariant.varientPrice;
                                    originalPrice = products[i].regularPrice; // User's manual fix: use product regular price for strike-through
                                    hasDiscount = defaultVariant.salePrice && defaultVariant.salePrice < defaultVariant.varientPrice;
                                } else {
                                    hasDiscount = products[i].salePrice && products[i].salePrice < products[i].regularPrice;
                                }
                            %>
                            <p class="product-price">
                                ₹<%= (displayPrice || 0).toLocaleString('en-IN') %>
                                <% if (hasDiscount && originalPrice) { %>
                                  
                                    <span><strike>₹<%= originalPrice.toLocaleString('en-IN') %></strike></span>
                                <% } %>
                            </p>
                            <div class="product-rating">
                                <% for(let j=0; j < 5; j++) { %>
                                    <span class="star">★</span>
                                    <% } %>
                            </div>
                            <a href="/productDetails?id=<%=products[i]._id%>">
                <button class="add-to-cart" >View Product</button></a>
          
                        </div>
                        <% } %>
                </div>

                <div class="pagination">
                    <% if (currentPage> 1) { %>
                        <a href="#" class="page-link" data-page="<%= currentPage - 1 %>">← Prev</a>
                        <% } %>
                            <% for (let i=1; i <=totalPages; i++) { %>
                                <a href="#" class="page-link <%= currentPage === i ? 'active' : '' %>"
                                    data-page="<%= i %>">
                                    <%= i %>
                                </a>
                                <% } %>
                                    <% if (currentPage < totalPages) { %>
                                        <a href="#" class="page-link" data-page="<%= currentPage + 1 %>">Next →</a>
                                        <% } %>
                </div>
            </div>
            
        </section>

      




        <section class="features-section">
            <h2 class="section-title">Why Choose Us</h2>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">🚚</div>
                    <h3 class="feature-title">Free Shipping</h3>
                    <p class="feature-description">Enjoy free shipping on all orders over $100. Fast and reliable
                        delivery to your doorstep.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">🔒</div>
                    <h3 class="feature-title">Secure Payment</h3>
                    <p class="feature-description">Your transactions are protected with bank-level security and
                        encrypted payment processing.</p>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">↩️</div>
                    <h3 class="feature-title">Easy Returns</h3>
                    <p class="feature-description">30-day hassle-free returns. Not satisfied? Send it back for a full
                        refund.</p>
                </div>
            </div>
        </section>

   <div id="toast" class="toast hidden">
    <div class="toast-content">
        <span class="icon">✅</span>
        <span id="toast-message">Message</span>
        <button onclick="hideToast()" class="close-btn">×</button>
    </div>
</div>

        <%- include("../partials/user/footer") %>
            <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

            <script>
                let cartCount = 0;
                let cartItems = [];
                let currentSearchQuery = '';
                let currentFilters = {
                    category: "<%= selectedCategory || '' %>",
                    minPrice: "<%= minPrice || '' %>",
                    maxPrice: "<%= maxPrice || '' %>",

                    sort: "<%= query && query.sort ? query.sort : 'default' %>"
                };



                function toggleFilter() {
                    const sidebar = document.getElementById('filterSidebar');
                    sidebar.classList.toggle('open');
                }

                function clearFilters() {
                    document.getElementById('categoryDropdown').value = '';
                    document.getElementById('min-price').value = '';
                    document.getElementById('max-price').value = '';

                    document.getElementById('sort').value = 'default';
                    currentFilters = { category: '', minPrice: '', maxPrice: '', rating: '0', sort: 'default' };
                    currentSearchQuery = '';
                    document.getElementById('product-search').value = '';
                    fetchProducts('', 1, currentFilters);
                }

                async function fetchProducts(searchQuery = '', page = 1, filters = {}) {
                    try {
                        console.log('Fetching products with:', { searchQuery, page, filters });
                        const queryParams = new URLSearchParams({ page });
                        if (searchQuery) queryParams.append('search', searchQuery);
                        if (filters.category) queryParams.append('category', filters.category);
                        if (filters.minPrice) queryParams.append('minPrice', filters.minPrice);
                        if (filters.maxPrice) queryParams.append('maxPrice', filters.maxPrice);

                        if (filters.sort && filters.sort !== 'default') queryParams.append('sort', filters.sort);

                        const endpoint = searchQuery ? '/search' : '/filter';
                        const method = searchQuery ? 'POST' : 'GET';
                        const body = searchQuery ? JSON.stringify({ search: searchQuery }) : null;

                        console.log('Request URL:', `${endpoint}?${queryParams.toString()}`);
                        const response = await fetch(`${endpoint}?${queryParams.toString()}`, {
                            method: method,
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: body
                        });

                        if (!response.ok) {
                            throw new Error(`Request failed with status ${response.status}`);
                        }

                        const data = await response.json();
                        console.log('Response data:', data);
                        const productsGrid = document.querySelector('.products-grid');
                        const pagination = document.querySelector('.pagination');
                        const productsCount = document.querySelector('.products-count');

                        productsGrid.innerHTML = '';
                        pagination.innerHTML = '';

                        if (data.products.length === 0) {
                            productsGrid.innerHTML = '<p>No products found.</p>';
                            productsCount.innerHTML = '<strong>Products (0)</strong>';
                            showNotification('No products found.');
                            return;
                        }

                        if (data.user) {
                            const userInfo = document.querySelector('.user-info');
                            if (userInfo) {
                                userInfo.innerHTML = `Welcome, ${data.user.name || 'User'}`;
                            }
                        }

                        data.products.forEach(product => {
                            const isInWishlist = data.userWishlist && data.userWishlist.includes(product._id);
                            const productCard = `
                    <div class="product-card">
                        <div class="product-header">
                            <button class="wishlist-btn ${isInWishlist ? 'active' : ''}" onclick="addToWishlist('${product._id}')" data-product-name="${product.productName}" data-product-price="${product.salePrice}">♡</button>
                        </div>
                        <div class="product-image">
                            <a href="/productDetails?id=${product._id}">
                                <img src="/Uploads/product-images/${product.productImage[0]}" alt="${product.productName}">
                            </a>
                        </div>
                        <h3 class="product-name">
                            <a href="/productDetails?id=${product._id}">${product.productName}</a>
                        </h3>
                        <p class="product-price">
                            ₹${(product.salePrice || product.regularPrice || 0).toLocaleString('en-IN')}
                            ${product.salePrice && product.salePrice < product.regularPrice ?
                                `<span><strike>₹${product.regularPrice.toLocaleString('en-IN')}</strike></span>` : ''}
                        </p>
                        <div class="product-rating">
                            ${'<span class="star">★</span>'.repeat(product.rating || 5)}
                        </div>
                        <button class="add-to-cart" onclick="addToCart('${product._id}')" data-product-name="${product.productName}" data-product-price="${product.salePrice}">Add to Cart</button>
                    </div>
                `;
                            productsGrid.insertAdjacentHTML('beforeend', productCard);
                        });

                        productsCount.innerHTML = `<strong>Products (${data.totalProducts || data.products.length})</strong>`;

                        if (data.totalPages > 1) {
                            if (data.currentPage > 1) {
                                pagination.insertAdjacentHTML('beforeend', `<a href="#" class="page-link" data-page="${data.currentPage - 1}">← Prev</a>`);
                            }
                            for (let i = 1; i <= data.totalPages; i++) {
                                const pageLink = `
                        <a href="#" class="page-link ${i === data.currentPage ? 'active' : ''}" data-page="${i}">${i}</a>
                    `;
                                pagination.insertAdjacentHTML('beforeend', pageLink);
                            }
                            if (data.currentPage < data.totalPages) {
                                pagination.insertAdjacentHTML('beforeend', `<a href="#" class="page-link" data-page="${data.currentPage + 1}">Next →</a>`);
                            }
                        }

                        // showNotification('Products updated!');
                    } catch (error) {
                        console.error('Error fetching products:', error);
                        showNotification('Error fetching products.');
                    }
                }

                document.addEventListener('DOMContentLoaded', () => {
                    // Filter form submission
                    document.getElementById('filterForm').addEventListener('submit', async (e) => {
                        e.preventDefault();
                        currentFilters = {
                            category: document.getElementById('categoryDropdown').value,
                            minPrice: document.getElementById('min-price').value || '',
                            maxPrice: document.getElementById('max-price').value || '',

                            sort: document.getElementById('sort').value
                        };
                        console.log('Applied filters:', currentFilters);
                        currentSearchQuery = '';
                        document.getElementById('product-search').value = '';
                        await fetchProducts('', 1, currentFilters);
                    });

                    // Search form submission
                    document.getElementById('searchForm').addEventListener('submit', async (e) => {
                        e.preventDefault();
                        currentSearchQuery = document.getElementById('product-search').value.trim();
                        currentFilters = { category: '', minPrice: '', maxPrice: '', sort: document.getElementById('sort').value };
                        document.getElementById('categoryDropdown').value = '';
                        document.getElementById('min-price').value = '';
                        document.getElementById('max-price').value = '';

                        console.log('Search query:', currentSearchQuery);
                        await fetchProducts(currentSearchQuery, 1, currentFilters);
                    });

                    // Clear search
                    document.getElementById('clearSearch').addEventListener('click', async () => {
                        document.getElementById('product-search').value = '';
                        currentSearchQuery = '';
                        currentFilters.sort = document.getElementById('sort').value; // Preserve sort value
                        await fetchProducts('', 1, currentFilters);
                    });

                    // Pagination click
                    document.querySelector('.pagination').addEventListener('click', async (e) => {
                        e.preventDefault();
                        const link = e.target.closest('.page-link');
                        if (link) {
                            const page = parseInt(link.getAttribute('data-page'));
                            console.log('Navigating to page:', page);
                            await fetchProducts(currentSearchQuery, page, currentFilters);
                        }
                    });


                    // Smooth scroll for anchor links
                    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                        anchor.addEventListener('click', function (e) {
                            e.preventDefault();
                            const target = document.querySelector(this.getAttribute('href'));
                            if (target) {
                                target.scrollIntoView({
                                    behavior: 'smooth',
                                    block: 'start'
                                });
                            }
                        });
                    });

                    // Sticky sidebar logic
                    window.addEventListener('scroll', () => {
                        const sidebar = document.getElementById('filterSidebar');
                        const mainContent = document.querySelector('.main-content');
                        const footer = document.querySelector('footer');
                        const mainContentBottom = mainContent.getBoundingClientRect().bottom + window.scrollY;
                        const footerTop = footer.getBoundingClientRect().top + window.scrollY;

                        if (footerTop <= mainContentBottom) {
                            sidebar.style.position = 'absolute';
                            sidebar.style.bottom = '0';
                            sidebar.style.top = 'auto';
                        } else {
                            sidebar.style.position = 'sticky';
                            sidebar.style.top = '120px';
                            sidebar.style.bottom = 'auto';
                        }
                    });
                });



                // Toast notification function
                function showToast(message, type = 'success') {
                    // Remove existing toasts
                    const existingToasts = document.querySelectorAll('.toast-notification');
                    existingToasts.forEach(toast => toast.remove());

                    const toast = document.createElement('div');
                    toast.className = `toast-notification toast-${type}`;
                    toast.innerHTML = `
                        <div class="toast-content">
                            <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                            <span>${message}</span>
                        </div>
                    `;

                    // Add toast styles
                    toast.style.cssText = `
                        position: fixed;
                        top: 20px;
                        right: 20px;
                        background: ${type === 'success' ? '#28a745' : '#dc3545'};
                        color: white;
                        padding: 15px 20px;
                        border-radius: 8px;
                        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                        z-index: 10000;
                        display: flex;
                        align-items: center;
                        gap: 10px;
                        font-weight: 500;
                        animation: slideInRight 0.3s ease-out;
                        max-width: 350px;
                    `;

                    document.body.appendChild(toast);

                    // Auto remove after 3 seconds
                    setTimeout(() => {
                        toast.style.animation = 'slideOutRight 0.3s ease-in';
                        setTimeout(() => toast.remove(), 300);
                    }, 3000);
                }

                // Add CSS animations for toast
                if (!document.getElementById('toast-styles')) {
                    const style = document.createElement('style');
                    style.id = 'toast-styles';
                    style.textContent = `
                        @keyframes slideInRight {
                            from { transform: translateX(100%); opacity: 0; }
                            to { transform: translateX(0); opacity: 1; }
                        }
                        @keyframes slideOutRight {
                            from { transform: translateX(0); opacity: 1; }
                            to { transform: translateX(100%); opacity: 0; }
                        }
                        .toast-content {
                            display: flex;
                            align-items: center;
                            gap: 10px;
                        }
                    `;
                    document.head.appendChild(style);
                }

                async function addToCart(productId) {
                    try {
                        // Get product name from button data attribute
                        const button = event.target;
                        const productName = button.getAttribute('data-product-name') || 'Product';

                        // Disable button temporarily
                        button.disabled = true;
                        const originalText = button.innerHTML;
                        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';

                        const response = await fetch("/add-to-cart", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({ productId })
                        });

                        const data = await response.json();

                        if (data.success) {
                            showToast(`${productName} added to cart successfully!`, 'success');

                            // Update cart counter
                            if (window.updateCartCounter) {
                                window.updateCartCounter(data.cartCount);
                            }

                            // Change button text temporarily
                            button.innerHTML = '<i class="fas fa-check"></i> Added!';
                            button.style.background = '#28a745';

                            setTimeout(() => {
                                button.innerHTML = originalText;
                                button.style.background = '';
                                button.disabled = false;
                            }, 2000);
                        } else {
                            showToast(data.message || "Failed to add to cart", 'error');
                            button.innerHTML = originalText;
                            button.disabled = false;

                            // If authentication error, redirect to login
                            if (response.status === 401 && data.redirectTo) {
                                setTimeout(() => {
                                    window.location.href = data.redirectTo;
                                }, 1500);
                            }
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        showToast("Something went wrong. Please try again.", 'error');

                        // Reset button
                        const button = event.target;
                        button.innerHTML = 'Add to Cart';
                        button.disabled = false;
                    }
                }

             
function showToast(message, type = 'success') {
    const toast = document.getElementById('toast');

    if (!toast) {
        console.error('Toast element not found!');
        return;
    }

    const icon = toast.querySelector('.icon');
    const messageElement = document.getElementById('toast-message');

    if (!icon || !messageElement) {
        console.error('Toast icon or message element not found!');
        return;
    }

    const borderColor = {
        success: '#28a745',
        info: '#17a2b8',
        error: '#dc3545'
    };
    const emoji = {
        success: '✅',
        info: 'ℹ️',
        error: '❌'
    };

    icon.textContent = emoji[type];
    toast.style.borderLeft = `5px solid ${borderColor[type]}`;
    messageElement.textContent = message;

    // Clear any existing classes and add visible
    toast.classList.remove('hidden');
    toast.classList.add('visible');

    setTimeout(() => {
        hideToast();
    }, 3000);
}

function hideToast() {
    const toast = document.getElementById('toast');
    if (toast) {
        toast.classList.remove('visible');
        toast.classList.add('hidden');
    }
}



             function addToWishlist(productId) {
    if (!productId) {
        showToast('Invalid product ID', 'error');
        return;
    }

    $.ajax({
        url: '/addToWishlist',
        method: 'POST',
        data: { productId: productId },
        success: (response) => {
            const btn = $(`button[onclick="addToWishlist('${productId}')"]`);

            if (response.status) {
                if (response.action === 'added') {
                    btn.addClass('active');
                    showToast('Product added to wishlist', 'success');
                    // Update wishlist counter
                    if (typeof window.incrementWishlistCounter === 'function') {
                        window.incrementWishlistCounter();
                    } else {
                        // Fallback: try again after a short delay
                        setTimeout(() => {
                            if (typeof window.incrementWishlistCounter === 'function') {
                                window.incrementWishlistCounter();
                            }
                        }, 100);
                    }
                } else if (response.action === 'removed') {
                    btn.removeClass('active');
                    showToast('Product removed from wishlist', 'info');
                    // Update wishlist counter
                    if (typeof window.decrementWishlistCounter === 'function') {
                        window.decrementWishlistCounter();
                    } else {
                        // Fallback: try again after a short delay
                        setTimeout(() => {
                            if (typeof window.decrementWishlistCounter === 'function') {
                                window.decrementWishlistCounter();
                            }
                        }, 100);
                    }
                }
            } else {
                showToast(response.message || 'Error processing wishlist request', 'error');
            }
        },
        error: (jqXHR, textStatus, errorThrown) => {
            console.error('AJAX error:', textStatus, errorThrown, jqXHR.responseText);
            showToast('Error processing wishlist request', 'error');
        }
    });
}

            </script>
</body>

</html>