<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password - 1NOTONE</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }

        .container {
            display: flex;
            max-width: 1400px;
            margin: 0 auto;
            gap: 2rem;
            padding: 2rem;
        }

        .main-content {
            flex: 1;
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        }

        .page-header {
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #e9ecef;
        }

        .page-title {
            font-size: 2rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .page-subtitle {
            color: #666;
            font-size: 1rem;
        }

        .form-section {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: #333;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #333;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

        .btn-outline {
            background: transparent;
            border: 2px solid #667eea;
            color: #667eea;
        }

        .btn-outline:hover {
            background: #667eea;
            color: white;
        }

        .email-section {
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            margin-bottom: 1rem;
        }

        .current-email {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .email-text {
            font-weight: 600;
            color: #333;
        }

        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }

        .alert-success {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }

        .alert-danger {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }

        .alert-info {
            background: #d1ecf1;
            border: 1px solid #bee5eb;
            color: #0c5460;
        }

        /* Toast Styles */
        .toast {
            position: fixed !important;
            top: 80px !important;
            right: 20px !important;
            background: #fff !important;
            border-left: 5px solid #28a745 !important;
            border-radius: 10px !important;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2) !important;
            padding: 12px 20px !important;
            min-width: 280px !important;
            z-index: 999999 !important;
            transform: translateX(100%) !important;
            transition: transform 0.3s ease, opacity 0.3s ease !important;
            opacity: 0 !important;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
            pointer-events: auto !important;
        }

        .toast.visible {
            transform: translateX(0) !important;
            opacity: 1 !important;
            display: block !important;
        }

        .toast.hidden {
            transform: translateX(100%) !important;
            opacity: 0 !important;
        }

        .toast.success {
            border-left-color: #28a745;
        }

        .toast.error {
            border-left-color: #dc3545;
        }

        .toast.info {
            border-left-color: #17a2b8;
        }

        .toast-content {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .toast .icon {
            font-size: 1.2em;
        }

        .toast .close-btn {
            background: none;
            border: none;
            font-size: 1.2em;
            cursor: pointer;
            margin-left: auto;
            color: #666;
        }

        @media (max-width: 768px) {
            .container {
                flex-direction: column;
                padding: 1rem;
            }

            .email-section {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .toast {
                top: 60px;
                right: 10px;
                left: 10px;
                min-width: auto;
            }
        }
    </style>
</head>
<body>
    <%- include("../partials/user/header") %>

    <!-- Breadcrumb Navigation -->
    <%- include("../partials/user/breadcrumb", {
        breadcrumbs: [
            { name: "My Account", url: "/profile" },
            { name: "Change Password", url: "/changePassword" }
        ]
    }) %>

    <div class="container">
        <%- include("../partials/user/profilesidebar") %>
        
        <main class="main-content">
            <div class="page-header">
                <h1 class="page-title">
                    <i class="fas fa-lock"></i> Account Security
                </h1>
                <p class="page-subtitle">Manage your password and email settings</p>
            </div>

            <!-- Display Messages -->
            <% if (locals.message) { %>
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> <%= message %>
                </div>
            <% } %>

            <% if (locals.error) { %>
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle"></i> <%= error %>
                </div>
            <% } %>

            <% if (locals.success) { %>
                <div class="alert alert-success">
                    <i class="fas fa-check-circle"></i> <%= success %>
                </div>
            <% } %>

            <!-- URL Parameter Messages -->
            <div id="urlMessages"></div>

            <!-- Email Management Section -->
            <div class="form-section">
                <h2 class="section-title">
                    <i class="fas fa-envelope"></i> Email Address
                </h2>
                
                <div class="email-section">
                    <div class="current-email">
                        <i class="fas fa-envelope"></i>
                        <span class="email-text"><%= user.email %></span>
                    </div>
                    <button class="btn btn-outline" onclick="openChangeEmailModal()">
                        <i class="fas fa-edit"></i> Change Email
                    </button>
                </div>
            </div>

            <!-- Password Management Section -->
            <div class="form-section">
                <h2 class="section-title">
                    <i class="fas fa-key"></i> Change Password
                </h2>
                
                <form id="changePasswordForm" method="POST" action="/change-password">
                    <div class="form-group">
                        <label class="form-label" for="currentPassword">Current Password</label>
                        <input type="password" class="form-input" id="currentPassword" name="currentPassword" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="newPassword">New Password</label>
                        <input type="password" class="form-input" id="newPassword" name="newPassword" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="confirmPassword">Confirm New Password</label>
                        <input type="password" class="form-input" id="confirmPassword" name="confirmPassword" required>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Update Password
                    </button>
                </form>
            </div>
        </main>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="toast hidden">
        <div class="toast-content">
            <span class="icon">✅</span>
            <span id="toast-message">Message</span>
            <button onclick="hideToast()" class="close-btn">×</button>
        </div>
    </div>

    <!-- Change Email Modal -->
    <div class="modal fade" id="changeEmailModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Change Email Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="changeEmailForm">
                        <div class="form-group">
                            <label class="form-label">Current Email</label>
                            <input type="email" class="form-input" value="<%= user.email %>" readonly>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label" for="newEmail">New Email Address</label>
                            <input type="email" class="form-input" id="newEmail" name="newEmail" required>
                        </div>
                   
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="sendEmailOTP()">
                        <i class="fas fa-paper-plane"></i> Send OTP
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Handle URL parameters for messages
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const urlMessagesDiv = document.getElementById('urlMessages');

            if (urlParams.has('success')) {
                const successMessage = urlParams.get('success');
                urlMessagesDiv.innerHTML = `
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle"></i> ${successMessage}
                    </div>
                `;
                // Clean URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }

            if (urlParams.has('error')) {
                const errorMessage = urlParams.get('error');
                urlMessagesDiv.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle"></i> ${errorMessage}
                    </div>
                `;
                // Clean URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }
        });
        function openChangeEmailModal() {
            const modal = new bootstrap.Modal(document.getElementById('changeEmailModal'));
            modal.show();
        }

        async function  sendEmailOTP() {
            const newEmail = document.getElementById('newEmail').value;
            
            if (!newEmail) {
                showSimpleToast('Please enter a new email address', 'error');
                return;
            }

            if (!isValidEmail(newEmail)) {
                showSimpleToast('Please enter a valid email address', 'error');
                return;
            }

            try {
                const response = await fetch('/send-email-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ newEmail })
                });

                const data = await response.json();

                if (data.success) {
                    showSimpleToast('OTP sent to your new email address. Redirecting...', 'success');
                    setTimeout(() => {
                        window.location.href = `/verify-email-otp?email=${encodeURIComponent(newEmail)}`;
                    }, 2000);
                } else {
                    showSimpleToast(data.message || 'Failed to send OTP', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showSimpleToast('An error occurred while sending OTP', 'error');
            }
        }

        // Toast Functions
        function showToast(message, type = 'success') {
            console.log('showToast called:', message, type);

            const toast = document.getElementById('toast');
            if (!toast) {
                console.error('Toast element not found!');
                return;
            }

            const icon = toast.querySelector('.icon');
            const messageElement = document.getElementById('toast-message');

            if (!icon || !messageElement) {
                console.error('Toast icon or message element not found!');
                return;
            }

            const borderColor = {
                success: '#28a745',
                info: '#17a2b8',
                error: '#dc3545'
            };
            const emoji = {
                success: '✅',
                info: 'ℹ️',
                error: '❌'
            };

            // Update toast content
            icon.textContent = emoji[type] || '✅';
            toast.style.borderLeft = `5px solid ${borderColor[type] || '#28a745'}`;
            messageElement.textContent = message;

            // Clear any existing timeout
            if (window.toastTimeout) {
                clearTimeout(window.toastTimeout);
            }

            // Show toast
            toast.classList.remove('hidden');
            toast.classList.add('visible');

            console.log('Toast should be visible now');

            // Auto-hide after 3 seconds
            window.toastTimeout = setTimeout(() => {
                hideToast();
            }, 3000);
        }

        function hideToast() {
            console.log('hideToast called');
            const toast = document.getElementById('toast');
            if (toast) {
                toast.classList.remove('visible');
                toast.classList.add('hidden');
                console.log('Toast hidden');
            }
        }



        // Alternative simple toast function for testing
        function showSimpleToast(message, type = 'success') {
            // Remove any existing toast
            const existingToast = document.querySelector('.simple-toast');
            if (existingToast) {
                existingToast.remove();
            }

            // Create toast element
            const toast = document.createElement('div');
            toast.className = 'simple-toast';
            toast.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: ${type === 'error' ? '#dc3545' : '#28a745'};
                color: white;
                padding: 15px 20px;
                border-radius: 5px;
                z-index: 999999;
                font-family: Arial, sans-serif;
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
                max-width: 300px;
                word-wrap: break-word;
            `;
            toast.textContent = message;

            // Add to body
            document.body.appendChild(toast);

            // Remove after 3 seconds
            setTimeout(() => {
                if (toast && toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 3000);

            console.log('Simple toast created:', message);
        }

        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }

        // Password form validation
        document.getElementById('changePasswordForm').addEventListener('submit', function(e) {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            if (newPassword !== confirmPassword) {
                e.preventDefault();
                showSimpleToast('New password and confirm password do not match', 'error');
                return;
            }

            if (newPassword.length < 6) {
                e.preventDefault();
                showSimpleToast('Password must be at least 6 characters long', 'error');
                return;
            }
        });
    </script>
</body>
</html>
